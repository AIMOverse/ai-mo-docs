"{\"value\":{\"mdx\":\"# Basic Usage Examples\\n\\nLearn how to use AiMo Network with practical examples in different programming languages.\\n\\n## Prerequisites\\n\\nBefore running these examples, make sure you have:\\n\\n1. An AiMo Network account and API key\\n2. Your chosen programming language environment set up\\n3. The AiMo SDK installed (optional but recommended)\\n\\n## Text Generation\\n\\n### Python\\n\\nUsing the Python SDK:\\n\\n```python\\nfrom aimo import AimoClient\\n\\n# Initialize the client\\nclient = AimoClient(api_key=\\\"your_api_key_here\\\")\\n\\n# Generate text\\nresponse = client.chat.completions.create(\\n    model=\\\"gpt-4\\\",\\n    messages=[\\n        {\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Write a short poem about AI\\\"}\\n    ],\\n    max_tokens=100\\n)\\n\\nprint(response.choices[0].message.content)\\n```\\n\\nUsing requests library:\\n\\n```python\\nimport requests\\n\\nurl = \\\"https://api.aimo.network/v1/chat/completions\\\"\\nheaders = {\\n    \\\"Authorization\\\": \\\"Bearer your_api_key_here\\\",\\n    \\\"Content-Type\\\": \\\"application/json\\\"\\n}\\n\\ndata = {\\n    \\\"model\\\": \\\"gpt-4\\\",\\n    \\\"messages\\\": [\\n        {\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Write a short poem about AI\\\"}\\n    ],\\n    \\\"max_tokens\\\": 100\\n}\\n\\nresponse = requests.post(url, headers=headers, json=data)\\nresult = response.json()\\n\\nprint(result[\\\"choices\\\"][0][\\\"message\\\"][\\\"content\\\"])\\n```\\n\\n### JavaScript/TypeScript\\n\\nUsing the JavaScript SDK:\\n\\n```javascript\\nimport { AimoClient } from '@aimo/sdk';\\n\\nconst client = new AimoClient({\\n  apiKey: process.env.AIMO_API_KEY\\n});\\n\\nasync function generateText() {\\n  const response = await client.chat.completions.create({\\n    model: 'gpt-4',\\n    messages: [\\n      { role: 'user', content: 'Write a short poem about AI' }\\n    ],\\n    max_tokens: 100\\n  });\\n\\n  console.log(response.choices[0].message.content);\\n}\\n\\ngenerateText();\\n```\\n\\nUsing fetch:\\n\\n```javascript\\nconst response = await fetch('https://api.aimo.network/v1/chat/completions', {\\n  method: 'POST',\\n  headers: {\\n    'Authorization': 'Bearer your_api_key_here',\\n    'Content-Type': 'application/json'\\n  },\\n  body: JSON.stringify({\\n    model: 'gpt-4',\\n    messages: [\\n      { role: 'user', content: 'Write a short poem about AI' }\\n    ],\\n    max_tokens: 100\\n  })\\n});\\n\\nconst result = await response.json();\\nconsole.log(result.choices[0].message.content);\\n```\\n\\n### cURL\\n\\n```bash\\ncurl -X POST https://api.aimo.network/v1/chat/completions \\\\\\n  -H \\\"Authorization: Bearer your_api_key_here\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\n    \\\"model\\\": \\\"gpt-4\\\",\\n    \\\"messages\\\": [\\n      {\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Write a short poem about AI\\\"}\\n    ],\\n    \\\"max_tokens\\\": 100\\n  }'\\n```\\n\\n## Image Generation\\n\\n### Python\\n\\n```python\\nfrom aimo import AimoClient\\n\\nclient = AimoClient(api_key=\\\"your_api_key_here\\\")\\n\\nresponse = client.images.generate(\\n    model=\\\"dall-e-3\\\",\\n    prompt=\\\"A futuristic cityscape with flying cars\\\",\\n    size=\\\"1024x1024\\\",\\n    quality=\\\"standard\\\",\\n    n=1\\n)\\n\\n# Get the image URL\\nimage_url = response.data[0].url\\nprint(f\\\"Generated image: {image_url}\\\")\\n\\n# Download the image\\nimport requests\\nfrom PIL import Image\\nfrom io import BytesIO\\n\\nimg_response = requests.get(image_url)\\nimg = Image.open(BytesIO(img_response.content))\\nimg.save(\\\"generated_image.png\\\")\\n```\\n\\n### JavaScript\\n\\n```javascript\\nimport { AimoClient } from '@aimo/sdk';\\n\\nconst client = new AimoClient({\\n  apiKey: process.env.AIMO_API_KEY\\n});\\n\\nasync function generateImage() {\\n  const response = await client.images.generate({\\n    model: 'dall-e-3',\\n    prompt: 'A futuristic cityscape with flying cars',\\n    size: '1024x1024',\\n    quality: 'standard',\\n    n: 1\\n  });\\n\\n  const imageUrl = response.data[0].url;\\n  console.log(`Generated image: ${imageUrl}`);\\n\\n  // Download the image (Node.js)\\n  const fs = require('fs');\\n  const https = require('https');\\n  \\n  const file = fs.createWriteStream('generated_image.png');\\n  https.get(imageUrl, (response) => {\\n    response.pipe(file);\\n  });\\n}\\n\\ngenerateImage();\\n```\\n\\n## Text Embeddings\\n\\n### Python\\n\\n```python\\nfrom aimo import AimoClient\\nimport numpy as np\\n\\nclient = AimoClient(api_key=\\\"your_api_key_here\\\")\\n\\n# Generate embeddings for similarity search\\ntexts = [\\n    \\\"The weather is beautiful today\\\",\\n    \\\"It's sunny and warm outside\\\",\\n    \\\"I love pizza and pasta\\\",\\n    \\\"Italian food is delicious\\\"\\n]\\n\\nembeddings = []\\nfor text in texts:\\n    response = client.embeddings.create(\\n        model=\\\"text-embedding-ada-002\\\",\\n        input=text\\n    )\\n    embeddings.append(response.data[0].embedding)\\n\\n# Calculate similarity between first two texts\\nembedding1 = np.array(embeddings[0])\\nembedding2 = np.array(embeddings[1])\\n\\nsimilarity = np.dot(embedding1, embedding2) / (\\n    np.linalg.norm(embedding1) * np.linalg.norm(embedding2)\\n)\\n\\nprint(f\\\"Similarity between texts: {similarity:.3f}\\\")\\n```\\n\\n### JavaScript\\n\\n```javascript\\nimport { AimoClient } from '@aimo/sdk';\\n\\nconst client = new AimoClient({\\n  apiKey: process.env.AIMO_API_KEY\\n});\\n\\nasync function generateEmbeddings() {\\n  const texts = [\\n    \\\"The weather is beautiful today\\\",\\n    \\\"It's sunny and warm outside\\\",\\n    \\\"I love pizza and pasta\\\",\\n    \\\"Italian food is delicious\\\"\\n  ];\\n\\n  const embeddings = [];\\n  \\n  for (const text of texts) {\\n    const response = await client.embeddings.create({\\n      model: 'text-embedding-ada-002',\\n      input: text\\n    });\\n    embeddings.push(response.data[0].embedding);\\n  }\\n\\n  // Calculate cosine similarity\\n  function cosineSimilarity(a, b) {\\n    const dotProduct = a.reduce((sum, val, i) => sum + val * b[i], 0);\\n    const magnitudeA = Math.sqrt(a.reduce((sum, val) => sum + val * val, 0));\\n    const magnitudeB = Math.sqrt(b.reduce((sum, val) => sum + val * val, 0));\\n    return dotProduct / (magnitudeA * magnitudeB);\\n  }\\n\\n  const similarity = cosineSimilarity(embeddings[0], embeddings[1]);\\n  console.log(`Similarity between texts: ${similarity.toFixed(3)}`);\\n}\\n\\ngenerateEmbeddings();\\n```\\n\\n## Streaming Responses\\n\\n### Python\\n\\n```python\\nfrom aimo import AimoClient\\n\\nclient = AimoClient(api_key=\\\"your_api_key_here\\\")\\n\\nresponse = client.chat.completions.create(\\n    model=\\\"gpt-4\\\",\\n    messages=[\\n        {\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Tell me a story about a robot\\\"}\\n    ],\\n    stream=True\\n)\\n\\nprint(\\\"Story: \\\", end=\\\"\\\")\\nfor chunk in response:\\n    if chunk.choices[0].delta.content:\\n        print(chunk.choices[0].delta.content, end=\\\"\\\", flush=True)\\nprint()  # New line at the end\\n```\\n\\n### JavaScript\\n\\n```javascript\\nimport { AimoClient } from '@aimo/sdk';\\n\\nconst client = new AimoClient({\\n  apiKey: process.env.AIMO_API_KEY\\n});\\n\\nasync function streamResponse() {\\n  const stream = await client.chat.completions.create({\\n    model: 'gpt-4',\\n    messages: [\\n      { role: 'user', content: 'Tell me a story about a robot' }\\n    ],\\n    stream: true\\n  });\\n\\n  process.stdout.write('Story: ');\\n  \\n  for await (const chunk of stream) {\\n    if (chunk.choices[0]?.delta?.content) {\\n      process.stdout.write(chunk.choices[0].delta.content);\\n    }\\n  }\\n  \\n  console.log(); // New line at the end\\n}\\n\\nstreamResponse();\\n```\\n\\n## Error Handling\\n\\n### Python\\n\\n```python\\nfrom aimo import AimoClient, AimoError\\n\\nclient = AimoClient(api_key=\\\"your_api_key_here\\\")\\n\\ntry:\\n    response = client.chat.completions.create(\\n        model=\\\"gpt-4\\\",\\n        messages=[{\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Hello!\\\"}]\\n    )\\n    print(response.choices[0].message.content)\\n    \\nexcept AimoError as e:\\n    if e.status_code == 401:\\n        print(\\\"Authentication failed - check your API key\\\")\\n    elif e.status_code == 429:\\n        print(\\\"Rate limit exceeded - please wait before retrying\\\")\\n    elif e.status_code >= 500:\\n        print(\\\"Server error - please try again later\\\")\\n    else:\\n        print(f\\\"Request failed: {e}\\\")\\n```\\n\\n### JavaScript\\n\\n```javascript\\nimport { AimoClient, AimoError } from '@aimo/sdk';\\n\\nconst client = new AimoClient({\\n  apiKey: process.env.AIMO_API_KEY\\n});\\n\\ntry {\\n  const response = await client.chat.completions.create({\\n    model: 'gpt-4',\\n    messages: [{ role: 'user', content: 'Hello!' }]\\n  });\\n  \\n  console.log(response.choices[0].message.content);\\n  \\n} catch (error) {\\n  if (error instanceof AimoError) {\\n    if (error.status === 401) {\\n      console.log('Authentication failed - check your API key');\\n    } else if (error.status === 429) {\\n      console.log('Rate limit exceeded - please wait before retrying');\\n    } else if (error.status >= 500) {\\n      console.log('Server error - please try again later');\\n    } else {\\n      console.log(`Request failed: ${error.message}`);\\n    }\\n  } else {\\n    console.log(`Unexpected error: ${error}`);\\n  }\\n}\\n```\\n\\n## Next Steps\\n\\nNow that you've seen basic usage examples, explore more advanced topics:\\n\\n- [Advanced Integration](/examples/advanced) - Complex workflows and patterns\\n- [Python SDK](/examples/python-sdk) - Python-specific features and examples\\n- [JavaScript SDK](/examples/javascript-sdk) - JavaScript-specific features and examples\\n- [API Reference](/api-reference) - Complete API documentation\\n\",\"document\":[{\"href\":\"/examples/basic-usage#basic-usage-examples\",\"html\":\"</header>\\n<p>Learn how to use AiMo Network with practical examples in different programming languages.</p>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#basic-usage-examples\",\"isPage\":true,\"text\":\"\\nLearn how to use AiMo Network with practical examples in different programming languages.\\n\",\"title\":\"Basic Usage Examples\",\"titles\":[]},{\"href\":\"/examples/basic-usage#prerequisites\",\"html\":\"\\n<p>Before running these examples, make sure you have:</p>\\n<ol>\\n<li>An AiMo Network account and API key</li>\\n<li>Your chosen programming language environment set up</li>\\n<li>The AiMo SDK installed (optional but recommended)</li>\\n</ol>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#prerequisites\",\"isPage\":false,\"text\":\"\\nBefore running these examples, make sure you have:\\n\\nAn AiMo Network account and API key\\nYour chosen programming language environment set up\\nThe AiMo SDK installed (optional but recommended)\\n\\n\",\"title\":\"Prerequisites\",\"titles\":[\"Basic Usage Examples\"]},{\"href\":\"/examples/basic-usage#text-generation\",\"html\":\"\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#text-generation\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Text Generation\",\"titles\":[\"Basic Usage Examples\"]},{\"href\":\"/examples/basic-usage#python\",\"html\":\"\\n<p>Using the Python SDK:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> aimo </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AimoClient</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Initialize the client</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">client </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AimoClient(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">api_key</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;your_api_key_here&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Generate text</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.chat.completions.create(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">    model</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;gpt-4&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">    messages</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">[</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        {</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;role&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;user&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;content&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Write a short poem about AI&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">    max_tokens</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">100</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.choices[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].message.content)</span></span></code></pre>\\n<p>Using requests library:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">url </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;https://api.aimo.network/v1/chat/completions&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">headers </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;Authorization&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Bearer your_api_key_here&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;Content-Type&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;application/json&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">data </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;model&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;gpt-4&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;messages&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        {</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;role&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;user&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;content&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Write a short poem about AI&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;max_tokens&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">100</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests.post(url, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">headers</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">headers, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">json</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">data)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">result </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.json()</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(result[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;choices&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">][</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">][</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;message&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">][</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;content&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">])</span></span></code></pre>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#python\",\"isPage\":false,\"text\":\"\\nUsing the Python SDK:\\nfrom aimo import AimoClient\\n \\n# Initialize the client\\nclient = AimoClient(api_key=&quot;your_api_key_here&quot;)\\n \\n# Generate text\\nresponse = client.chat.completions.create(\\n    model=&quot;gpt-4&quot;,\\n    messages=[\\n        {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Write a short poem about AI&quot;}\\n    ],\\n    max_tokens=100\\n)\\n \\nprint(response.choices[0].message.content)\\nUsing requests library:\\nimport requests\\n \\nurl = &quot;https://api.aimo.network/v1/chat/completions&quot;\\nheaders = {\\n    &quot;Authorization&quot;: &quot;Bearer your_api_key_here&quot;,\\n    &quot;Content-Type&quot;: &quot;application/json&quot;\\n}\\n \\ndata = {\\n    &quot;model&quot;: &quot;gpt-4&quot;,\\n    &quot;messages&quot;: [\\n        {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Write a short poem about AI&quot;}\\n    ],\\n    &quot;max_tokens&quot;: 100\\n}\\n \\nresponse = requests.post(url, headers=headers, json=data)\\nresult = response.json()\\n \\nprint(result[&quot;choices&quot;][0][&quot;message&quot;][&quot;content&quot;])\\n\",\"title\":\"Python\",\"titles\":[\"Basic Usage Examples\",\"Text Generation\"]},{\"href\":\"/examples/basic-usage#javascripttypescript\",\"html\":\"\\n<p>Using the JavaScript SDK:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { AimoClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;@aimo/sdk&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> AimoClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  apiKey: process.env.</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">AIMO_API_KEY</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">async</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> generateText</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> response</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.chat.completions.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">create</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    model: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;gpt-4&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    messages: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      { role: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;user&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, content: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Write a short poem about AI&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    max_tokens: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">100</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  });</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.choices[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].message.content);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">generateText</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span></code></pre>\\n<p>Using fetch:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> response</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> fetch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://api.aimo.network/v1/chat/completions&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;POST&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  headers: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &#x27;Authorization&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Bearer your_api_key_here&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &#x27;Content-Type&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;application/json&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  body: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">JSON</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">stringify</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    model: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;gpt-4&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    messages: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      { role: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;user&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, content: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Write a short poem about AI&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    max_tokens: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">100</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> result</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">json</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(result.choices[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].message.content);</span></span></code></pre>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#javascripttypescript\",\"isPage\":false,\"text\":\"\\nUsing the JavaScript SDK:\\nimport { AimoClient } from &#x27;@aimo/sdk&#x27;;\\n \\nconst client = new AimoClient({\\n  apiKey: process.env.AIMO_API_KEY\\n});\\n \\nasync function generateText() {\\n  const response = await client.chat.completions.create({\\n    model: &#x27;gpt-4&#x27;,\\n    messages: [\\n      { role: &#x27;user&#x27;, content: &#x27;Write a short poem about AI&#x27; }\\n    ],\\n    max_tokens: 100\\n  });\\n \\n  console.log(response.choices[0].message.content);\\n}\\n \\ngenerateText();\\nUsing fetch:\\nconst response = await fetch(&#x27;https://api.aimo.network/v1/chat/completions&#x27;, {\\n  method: &#x27;POST&#x27;,\\n  headers: {\\n    &#x27;Authorization&#x27;: &#x27;Bearer your_api_key_here&#x27;,\\n    &#x27;Content-Type&#x27;: &#x27;application/json&#x27;\\n  },\\n  body: JSON.stringify({\\n    model: &#x27;gpt-4&#x27;,\\n    messages: [\\n      { role: &#x27;user&#x27;, content: &#x27;Write a short poem about AI&#x27; }\\n    ],\\n    max_tokens: 100\\n  })\\n});\\n \\nconst result = await response.json();\\nconsole.log(result.choices[0].message.content);\\n\",\"title\":\"JavaScript/TypeScript\",\"titles\":[\"Basic Usage Examples\",\"Text Generation\"]},{\"href\":\"/examples/basic-usage#curl\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">curl</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> -X</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> POST</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> https://api.aimo.network/v1/chat/completions</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -H</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;Authorization: Bearer your_api_key_here&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -H</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;Content-Type: application/json&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -d</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;model&quot;: &quot;gpt-4&quot;,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;messages&quot;: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">      {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Write a short poem about AI&quot;}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;max_tokens&quot;: 100</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">  }&#x27;</span></span></code></pre>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#curl\",\"isPage\":false,\"text\":\"\\ncurl -X POST https://api.aimo.network/v1/chat/completions \\\\\\n  -H &quot;Authorization: Bearer your_api_key_here&quot; \\\\\\n  -H &quot;Content-Type: application/json&quot; \\\\\\n  -d &#x27;{\\n    &quot;model&quot;: &quot;gpt-4&quot;,\\n    &quot;messages&quot;: [\\n      {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Write a short poem about AI&quot;}\\n    ],\\n    &quot;max_tokens&quot;: 100\\n  }&#x27;\\n\",\"title\":\"cURL\",\"titles\":[\"Basic Usage Examples\",\"Text Generation\"]},{\"href\":\"/examples/basic-usage#image-generation\",\"html\":\"\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#image-generation\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Image Generation\",\"titles\":[\"Basic Usage Examples\"]},{\"href\":\"/examples/basic-usage#python-1\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> aimo </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AimoClient</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">client </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AimoClient(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">api_key</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;your_api_key_here&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.images.generate(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">    model</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;dall-e-3&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">    prompt</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;A futuristic cityscape with flying cars&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">    size</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;1024x1024&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">    quality</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;standard&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">    n</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Get the image URL</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">image_url </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.data[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].url</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Generated image: </span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">image_url</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Download the image</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> PIL</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> Image</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> io </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> BytesIO</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">img_response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests.get(image_url)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">img </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> Image.open(BytesIO(img_response.content))</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">img.save(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;generated_image.png&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#python-1\",\"isPage\":false,\"text\":\"\\nfrom aimo import AimoClient\\n \\nclient = AimoClient(api_key=&quot;your_api_key_here&quot;)\\n \\nresponse = client.images.generate(\\n    model=&quot;dall-e-3&quot;,\\n    prompt=&quot;A futuristic cityscape with flying cars&quot;,\\n    size=&quot;1024x1024&quot;,\\n    quality=&quot;standard&quot;,\\n    n=1\\n)\\n \\n# Get the image URL\\nimage_url = response.data[0].url\\nprint(f&quot;Generated image: {image_url}&quot;)\\n \\n# Download the image\\nimport requests\\nfrom PIL import Image\\nfrom io import BytesIO\\n \\nimg_response = requests.get(image_url)\\nimg = Image.open(BytesIO(img_response.content))\\nimg.save(&quot;generated_image.png&quot;)\\n\",\"title\":\"Python\",\"titles\":[\"Basic Usage Examples\",\"Image Generation\"]},{\"href\":\"/examples/basic-usage#javascript\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { AimoClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;@aimo/sdk&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> AimoClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  apiKey: process.env.</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">AIMO_API_KEY</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">async</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> generateImage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> response</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.images.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">generate</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    model: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;dall-e-3&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    prompt: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;A futuristic cityscape with flying cars&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    size: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;1024x1024&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    quality: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;standard&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    n: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  });</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> imageUrl</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.data[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].url;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">`Generated image: ${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">imageUrl</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // Download the image (Node.js)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> fs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> require</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;fs&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> https</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> require</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> file</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> fs.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">createWriteStream</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;generated_image.png&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  https.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">get</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(imageUrl, (</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">response</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    response.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">pipe</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(file);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">generateImage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span></code></pre>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#javascript\",\"isPage\":false,\"text\":\"\\nimport { AimoClient } from &#x27;@aimo/sdk&#x27;;\\n \\nconst client = new AimoClient({\\n  apiKey: process.env.AIMO_API_KEY\\n});\\n \\nasync function generateImage() {\\n  const response = await client.images.generate({\\n    model: &#x27;dall-e-3&#x27;,\\n    prompt: &#x27;A futuristic cityscape with flying cars&#x27;,\\n    size: &#x27;1024x1024&#x27;,\\n    quality: &#x27;standard&#x27;,\\n    n: 1\\n  });\\n \\n  const imageUrl = response.data[0].url;\\n  console.log(`Generated image: ${imageUrl}`);\\n \\n  // Download the image (Node.js)\\n  const fs = require(&#x27;fs&#x27;);\\n  const https = require(&#x27;https&#x27;);\\n  \\n  const file = fs.createWriteStream(&#x27;generated_image.png&#x27;);\\n  https.get(imageUrl, (response) =&gt; {\\n    response.pipe(file);\\n  });\\n}\\n \\ngenerateImage();\\n\",\"title\":\"JavaScript\",\"titles\":[\"Basic Usage Examples\",\"Image Generation\"]},{\"href\":\"/examples/basic-usage#text-embeddings\",\"html\":\"\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#text-embeddings\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Text Embeddings\",\"titles\":[\"Basic Usage Examples\"]},{\"href\":\"/examples/basic-usage#python-2\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> aimo </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AimoClient</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> numpy </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> np</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">client </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AimoClient(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">api_key</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;your_api_key_here&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Generate embeddings for similarity search</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">texts </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;The weather is beautiful today&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;It&#x27;s sunny and warm outside&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;I love pizza and pasta&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;Italian food is delicious&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">embeddings </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> []</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> text </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> texts:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.embeddings.create(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">        model</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;text-embedding-ada-002&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">        input</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">text</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    )</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    embeddings.append(response.data[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].embedding)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Calculate similarity between first two texts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">embedding1 </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> np.array(embeddings[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">embedding2 </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> np.array(embeddings[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">])</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">similarity </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> np.dot(embedding1, embedding2) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">/</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    np.linalg.norm(embedding1) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> np.linalg.norm(embedding2)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Similarity between texts: </span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">similarity</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:.3f</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#python-2\",\"isPage\":false,\"text\":\"\\nfrom aimo import AimoClient\\nimport numpy as np\\n \\nclient = AimoClient(api_key=&quot;your_api_key_here&quot;)\\n \\n# Generate embeddings for similarity search\\ntexts = [\\n    &quot;The weather is beautiful today&quot;,\\n    &quot;It&#x27;s sunny and warm outside&quot;,\\n    &quot;I love pizza and pasta&quot;,\\n    &quot;Italian food is delicious&quot;\\n]\\n \\nembeddings = []\\nfor text in texts:\\n    response = client.embeddings.create(\\n        model=&quot;text-embedding-ada-002&quot;,\\n        input=text\\n    )\\n    embeddings.append(response.data[0].embedding)\\n \\n# Calculate similarity between first two texts\\nembedding1 = np.array(embeddings[0])\\nembedding2 = np.array(embeddings[1])\\n \\nsimilarity = np.dot(embedding1, embedding2) / (\\n    np.linalg.norm(embedding1) * np.linalg.norm(embedding2)\\n)\\n \\nprint(f&quot;Similarity between texts: {similarity:.3f}&quot;)\\n\",\"title\":\"Python\",\"titles\":[\"Basic Usage Examples\",\"Text Embeddings\"]},{\"href\":\"/examples/basic-usage#javascript-1\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { AimoClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;@aimo/sdk&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> AimoClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  apiKey: process.env.</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">AIMO_API_KEY</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">async</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> generateEmbeddings</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> texts</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;The weather is beautiful today&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;It&#x27;s sunny and warm outside&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;I love pizza and pasta&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;Italian food is delicious&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ];</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> embeddings</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> text</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> of</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> texts) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> response</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.embeddings.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">create</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      model: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;text-embedding-ada-002&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      input: text</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    embeddings.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">push</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.data[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].embedding);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // Calculate cosine similarity</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> cosineSimilarity</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">a</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">b</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> dotProduct</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> a.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">reduce</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">((</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">sum</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">val</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">i</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> sum </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">+</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> val </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> b[i], </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> magnitudeA</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> Math.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sqrt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(a.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">reduce</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">((</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">sum</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">val</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> sum </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">+</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> val </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> val, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> magnitudeB</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> Math.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sqrt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(b.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">reduce</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">((</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">sum</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">val</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> sum </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">+</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> val </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> val, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> dotProduct </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">/</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (magnitudeA </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> magnitudeB);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> similarity</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> cosineSimilarity</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(embeddings[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">], embeddings[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">`Similarity between texts: ${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">similarity</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">toFixed</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">3</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">)</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">generateEmbeddings</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span></code></pre>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#javascript-1\",\"isPage\":false,\"text\":\"\\nimport { AimoClient } from &#x27;@aimo/sdk&#x27;;\\n \\nconst client = new AimoClient({\\n  apiKey: process.env.AIMO_API_KEY\\n});\\n \\nasync function generateEmbeddings() {\\n  const texts = [\\n    &quot;The weather is beautiful today&quot;,\\n    &quot;It&#x27;s sunny and warm outside&quot;,\\n    &quot;I love pizza and pasta&quot;,\\n    &quot;Italian food is delicious&quot;\\n  ];\\n \\n  const embeddings = [];\\n  \\n  for (const text of texts) {\\n    const response = await client.embeddings.create({\\n      model: &#x27;text-embedding-ada-002&#x27;,\\n      input: text\\n    });\\n    embeddings.push(response.data[0].embedding);\\n  }\\n \\n  // Calculate cosine similarity\\n  function cosineSimilarity(a, b) {\\n    const dotProduct = a.reduce((sum, val, i) =&gt; sum + val * b[i], 0);\\n    const magnitudeA = Math.sqrt(a.reduce((sum, val) =&gt; sum + val * val, 0));\\n    const magnitudeB = Math.sqrt(b.reduce((sum, val) =&gt; sum + val * val, 0));\\n    return dotProduct / (magnitudeA * magnitudeB);\\n  }\\n \\n  const similarity = cosineSimilarity(embeddings[0], embeddings[1]);\\n  console.log(`Similarity between texts: ${similarity.toFixed(3)}`);\\n}\\n \\ngenerateEmbeddings();\\n\",\"title\":\"JavaScript\",\"titles\":[\"Basic Usage Examples\",\"Text Embeddings\"]},{\"href\":\"/examples/basic-usage#streaming-responses\",\"html\":\"\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#streaming-responses\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Streaming Responses\",\"titles\":[\"Basic Usage Examples\"]},{\"href\":\"/examples/basic-usage#python-3\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> aimo </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AimoClient</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">client </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AimoClient(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">api_key</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;your_api_key_here&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.chat.completions.create(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">    model</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;gpt-4&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">    messages</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">[</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        {</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;role&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;user&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;content&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Tell me a story about a robot&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">    stream</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">True</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Story: &quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">end</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> chunk </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> chunk.choices[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].delta.content:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(chunk.choices[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].delta.content, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">end</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">flush</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">True</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># New line at the end</span></span></code></pre>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#python-3\",\"isPage\":false,\"text\":\"\\nfrom aimo import AimoClient\\n \\nclient = AimoClient(api_key=&quot;your_api_key_here&quot;)\\n \\nresponse = client.chat.completions.create(\\n    model=&quot;gpt-4&quot;,\\n    messages=[\\n        {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Tell me a story about a robot&quot;}\\n    ],\\n    stream=True\\n)\\n \\nprint(&quot;Story: &quot;, end=&quot;&quot;)\\nfor chunk in response:\\n    if chunk.choices[0].delta.content:\\n        print(chunk.choices[0].delta.content, end=&quot;&quot;, flush=True)\\nprint()  # New line at the end\\n\",\"title\":\"Python\",\"titles\":[\"Basic Usage Examples\",\"Streaming Responses\"]},{\"href\":\"/examples/basic-usage#javascript-2\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { AimoClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;@aimo/sdk&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> AimoClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  apiKey: process.env.</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">AIMO_API_KEY</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">async</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> streamResponse</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> stream</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.chat.completions.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">create</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    model: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;gpt-4&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    messages: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      { role: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;user&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, content: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Tell me a story about a robot&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    stream: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  });</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  process.stdout.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">write</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Story: &#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  for</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> chunk</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> of</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> stream) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (chunk.choices[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]?.delta?.content) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      process.stdout.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">write</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(chunk.choices[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].delta.content);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(); </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// New line at the end</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">streamResponse</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span></code></pre>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#javascript-2\",\"isPage\":false,\"text\":\"\\nimport { AimoClient } from &#x27;@aimo/sdk&#x27;;\\n \\nconst client = new AimoClient({\\n  apiKey: process.env.AIMO_API_KEY\\n});\\n \\nasync function streamResponse() {\\n  const stream = await client.chat.completions.create({\\n    model: &#x27;gpt-4&#x27;,\\n    messages: [\\n      { role: &#x27;user&#x27;, content: &#x27;Tell me a story about a robot&#x27; }\\n    ],\\n    stream: true\\n  });\\n \\n  process.stdout.write(&#x27;Story: &#x27;);\\n  \\n  for await (const chunk of stream) {\\n    if (chunk.choices[0]?.delta?.content) {\\n      process.stdout.write(chunk.choices[0].delta.content);\\n    }\\n  }\\n  \\n  console.log(); // New line at the end\\n}\\n \\nstreamResponse();\\n\",\"title\":\"JavaScript\",\"titles\":[\"Basic Usage Examples\",\"Streaming Responses\"]},{\"href\":\"/examples/basic-usage#error-handling\",\"html\":\"\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#error-handling\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Error Handling\",\"titles\":[\"Basic Usage Examples\"]},{\"href\":\"/examples/basic-usage#python-4\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> aimo </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AimoClient, AimoError</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">client </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AimoClient(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">api_key</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;your_api_key_here&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.chat.completions.create(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">        model</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;gpt-4&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">        messages</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">[{</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;role&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;user&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;content&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Hello!&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    )</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.choices[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].message.content)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">except</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AimoError </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> e:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> e.status_code </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 401</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Authentication failed - check your API key&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    elif</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> e.status_code </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 429</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Rate limit exceeded - please wait before retrying&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    elif</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> e.status_code </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 500</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Server error - please try again later&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    else</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Request failed: </span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">e</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#python-4\",\"isPage\":false,\"text\":\"\\nfrom aimo import AimoClient, AimoError\\n \\nclient = AimoClient(api_key=&quot;your_api_key_here&quot;)\\n \\ntry:\\n    response = client.chat.completions.create(\\n        model=&quot;gpt-4&quot;,\\n        messages=[{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;}]\\n    )\\n    print(response.choices[0].message.content)\\n    \\nexcept AimoError as e:\\n    if e.status_code == 401:\\n        print(&quot;Authentication failed - check your API key&quot;)\\n    elif e.status_code == 429:\\n        print(&quot;Rate limit exceeded - please wait before retrying&quot;)\\n    elif e.status_code &gt;= 500:\\n        print(&quot;Server error - please try again later&quot;)\\n    else:\\n        print(f&quot;Request failed: {e}&quot;)\\n\",\"title\":\"Python\",\"titles\":[\"Basic Usage Examples\",\"Error Handling\"]},{\"href\":\"/examples/basic-usage#javascript-3\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { AimoClient, AimoError } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;@aimo/sdk&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> AimoClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  apiKey: process.env.</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">AIMO_API_KEY</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> response</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.chat.completions.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">create</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    model: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;gpt-4&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    messages: [{ role: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;user&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, content: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Hello!&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.choices[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].message.content);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">} </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">catch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (error) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (error </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">instanceof</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> AimoError</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (error.status </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">===</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 401</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Authentication failed - check your API key&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (error.status </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">===</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 429</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Rate limit exceeded - please wait before retrying&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (error.status </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 500</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Server error - please try again later&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">`Request failed: ${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">error</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">message</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">`Unexpected error: ${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">error</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/examples/basic-usage.mdx#javascript-3\",\"isPage\":false,\"text\":\"\\nimport { AimoClient, AimoError } from &#x27;@aimo/sdk&#x27;;\\n \\nconst client = new AimoClient({\\n  apiKey: process.env.AIMO_API_KEY\\n});\\n \\ntry {\\n  const response = await client.chat.completions.create({\\n    model: &#x27;gpt-4&#x27;,\\n    messages: [{ role: &#x27;user&#x27;, content: &#x27;Hello!&#x27; }]\\n  });\\n  \\n  console.log(response.choices[0].message.content);\\n  \\n} catch (error) {\\n  if (error instanceof AimoError) {\\n    if (error.status === 401) {\\n      console.log(&#x27;Authentication failed - check your API key&#x27;);\\n    } else if (error.status === 429) {\\n      console.log(&#x27;Rate limit exceeded - please wait before retrying&#x27;);\\n    } else if (error.status &gt;= 500) {\\n      console.log(&#x27;Server error - please try again later&#x27;);\\n    } else {\\n      console.log(`Request failed: ${error.message}`);\\n    }\\n  } else {\\n    console.log(`Unexpected error: ${error}`);\\n  }\\n}\\n\",\"title\":\"JavaScript\",\"titles\":[\"Basic Usage Examples\",\"Error Handling\"]},{\"href\":\"/examples/basic-usage#next-steps\",\"html\":\"\\n<p>Now that you&#x27;ve seen basic usage examples, explore more advanced topics:</p>\\n<ul>\\n<li><a href=\\\"/examples/advanced\\\">Advanced Integration</a> - Complex workflows and patterns</li>\\n<li><a href=\\\"/examples/python-sdk\\\">Python SDK</a> - Python-specific features and examples</li>\\n<li><a href=\\\"/examples/javascript-sdk\\\">JavaScript SDK</a> - JavaScript-specific features and examples</li>\\n<li><a href=\\\"/api-reference\\\">API Reference</a> - Complete API documentation</li>\\n</ul>\",\"id\":\"docs/pages/examples/basic-usage.mdx#next-steps\",\"isPage\":false,\"text\":\"\\nNow that you&#x27;ve seen basic usage examples, explore more advanced topics:\\n\\nAdvanced Integration - Complex workflows and patterns\\nPython SDK - Python-specific features and examples\\nJavaScript SDK - JavaScript-specific features and examples\\nAPI Reference - Complete API documentation\\n\",\"title\":\"Next Steps\",\"titles\":[\"Basic Usage Examples\"]}]}}"
