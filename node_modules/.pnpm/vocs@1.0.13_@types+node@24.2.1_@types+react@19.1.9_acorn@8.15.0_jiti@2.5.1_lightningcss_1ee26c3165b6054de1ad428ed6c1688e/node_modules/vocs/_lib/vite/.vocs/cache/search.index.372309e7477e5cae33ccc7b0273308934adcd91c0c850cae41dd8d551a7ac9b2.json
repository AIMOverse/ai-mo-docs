"{\"value\":{\"mdx\":\"# Performance Monitoring\\n\\nLearn how to monitor, analyze, and optimize your model's performance on AiMo Network.\\n\\n## Monitoring Overview\\n\\nEffective monitoring is crucial for maintaining high-quality service, maximizing revenue, and ensuring customer satisfaction. AiMo Network provides comprehensive monitoring tools and APIs for providers.\\n\\n### Key Metrics\\n\\n#### Performance Metrics\\n- **Response latency**: Time from request to response\\n- **Throughput**: Requests handled per second\\n- **Uptime**: Percentage of time your model is available\\n- **Error rate**: Percentage of failed requests\\n\\n#### Quality Metrics\\n- **User ratings**: 1-5 star ratings from users\\n- **Output quality**: Automated quality assessments\\n- **Consistency**: Variation in response quality\\n- **Safety scores**: Content safety and bias metrics\\n\\n#### Business Metrics\\n- **Request volume**: Number of requests over time\\n- **Revenue**: Earnings from your model\\n- **Market share**: Your share of requests in your category\\n- **Customer retention**: Repeat usage patterns\\n\\n## Monitoring Dashboard\\n\\n### Provider Dashboard\\n\\nAccess your monitoring dashboard at [dashboard.aimo.network/provider](https://dashboard.aimo.network/provider):\\n\\n#### Real-Time Overview\\n- **Current status**: Green/yellow/red health indicator\\n- **Live metrics**: Active requests, response time, error rate\\n- **Revenue ticker**: Real-time earnings updates\\n- **Alerts**: Critical issues requiring attention\\n\\n#### Historical Analytics\\n- **Time-series charts**: Performance trends over time\\n- **Comparative analysis**: Your performance vs. market averages\\n- **Detailed breakdowns**: Metrics by user, region, or time period\\n- **Custom date ranges**: Flexible time period selection\\n\\n### API Monitoring\\n\\n#### Metrics Endpoint\\n```bash\\ncurl -X GET https://api.aimo.network/v1/provider/metrics \\\\\\n  -H \\\"Authorization: Bearer YOUR_PROVIDER_KEY\\\" \\\\\\n  -G -d \\\"start_date=2024-01-01\\\" \\\\\\n  -d \\\"end_date=2024-01-31\\\" \\\\\\n  -d \\\"granularity=hourly\\\"\\n```\\n\\n#### Response Format\\n```json\\n{\\n  \\\"success\\\": true,\\n  \\\"data\\\": {\\n    \\\"period\\\": {\\n      \\\"start\\\": \\\"2024-01-01T00:00:00Z\\\",\\n      \\\"end\\\": \\\"2024-01-31T23:59:59Z\\\"\\n    },\\n    \\\"summary\\\": {\\n      \\\"total_requests\\\": 15420,\\n      \\\"total_revenue\\\": 234.67,\\n      \\\"average_latency_ms\\\": 1840,\\n      \\\"uptime_percentage\\\": 99.7,\\n      \\\"error_rate\\\": 0.8,\\n      \\\"average_rating\\\": 4.3\\n    },\\n    \\\"timeseries\\\": [\\n      {\\n        \\\"timestamp\\\": \\\"2024-01-01T00:00:00Z\\\",\\n        \\\"requests\\\": 45,\\n        \\\"latency_ms\\\": 1650,\\n        \\\"errors\\\": 1,\\n        \\\"revenue\\\": 2.34\\n      }\\n    ]\\n  }\\n}\\n```\\n\\n## Setting Up Monitoring\\n\\n### Internal Monitoring\\n\\n#### Application Metrics\\nImplement metrics collection in your model server:\\n\\n```python\\nimport time\\nimport logging\\nfrom prometheus_client import Counter, Histogram, Gauge\\nfrom functools import wraps\\n\\n# Prometheus metrics\\nREQUEST_COUNT = Counter('model_requests_total', 'Total requests', ['status'])\\nREQUEST_DURATION = Histogram('model_request_duration_seconds', 'Request duration')\\nACTIVE_REQUESTS = Gauge('model_active_requests', 'Active requests')\\nGPU_UTILIZATION = Gauge('model_gpu_utilization_percent', 'GPU utilization')\\n\\ndef monitor_request(func):\\n    @wraps(func)\\n    def wrapper(*args, **kwargs):\\n        start_time = time.time()\\n        ACTIVE_REQUESTS.inc()\\n        \\n        try:\\n            result = func(*args, **kwargs)\\n            REQUEST_COUNT.labels(status='success').inc()\\n            return result\\n        except Exception as e:\\n            REQUEST_COUNT.labels(status='error').inc()\\n            raise\\n        finally:\\n            duration = time.time() - start_time\\n            REQUEST_DURATION.observe(duration)\\n            ACTIVE_REQUESTS.dec()\\n    \\n    return wrapper\\n\\n@app.route('/v1/chat/completions', methods=['POST'])\\n@monitor_request\\ndef chat_completion():\\n    # Your model implementation\\n    pass\\n```\\n\\n#### Health Checks\\nImplement comprehensive health endpoints:\\n\\n```python\\nimport psutil\\nimport torch\\nfrom flask import jsonify\\n\\n@app.route('/health/liveness', methods=['GET'])\\ndef liveness_check():\\n    \\\"\\\"\\\"Basic liveness check\\\"\\\"\\\"\\n    return jsonify({'status': 'alive', 'timestamp': time.time()})\\n\\n@app.route('/health/readiness', methods=['GET'])\\ndef readiness_check():\\n    \\\"\\\"\\\"Detailed readiness check\\\"\\\"\\\"\\n    checks = {\\n        'model_loaded': is_model_loaded(),\\n        'gpu_available': torch.cuda.is_available() if torch.cuda.is_available() else True,\\n        'memory_ok': psutil.virtual_memory().percent < 90,\\n        'disk_ok': psutil.disk_usage('/').percent < 95\\n    }\\n    \\n    all_healthy = all(checks.values())\\n    status_code = 200 if all_healthy else 503\\n    \\n    return jsonify({\\n        'status': 'ready' if all_healthy else 'not_ready',\\n        'checks': checks,\\n        'timestamp': time.time()\\n    }), status_code\\n\\n@app.route('/metrics', methods=['GET'])\\ndef prometheus_metrics():\\n    \\\"\\\"\\\"Prometheus metrics endpoint\\\"\\\"\\\"\\n    from prometheus_client import generate_latest\\n    return generate_latest(), 200, {'Content-Type': 'text/plain'}\\n```\\n\\n### External Monitoring\\n\\n#### Uptime Monitoring\\nMonitor your endpoints from external services:\\n\\n```python\\n# Simple uptime monitor\\nimport requests\\nimport time\\nimport smtplib\\n\\ndef check_endpoint_health(url, timeout=30):\\n    try:\\n        response = requests.get(f\\\"{url}/health\\\", timeout=timeout)\\n        return {\\n            'status': 'up' if response.status_code == 200 else 'down',\\n            'status_code': response.status_code,\\n            'response_time': response.elapsed.total_seconds(),\\n            'timestamp': time.time()\\n        }\\n    except requests.RequestException as e:\\n        return {\\n            'status': 'down',\\n            'error': str(e),\\n            'timestamp': time.time()\\n        }\\n\\ndef send_alert(message):\\n    # Send email/slack alert\\n    pass\\n\\n# Monitor loop\\nwhile True:\\n    health = check_endpoint_health(\\\"https://your-model.api.com\\\")\\n    \\n    if health['status'] == 'down':\\n        send_alert(f\\\"Model endpoint is down: {health}\\\")\\n    \\n    time.sleep(60)  # Check every minute\\n```\\n\\n#### Performance Testing\\nRegular performance testing to catch regressions:\\n\\n```python\\nimport asyncio\\nimport aiohttp\\nimport statistics\\n\\nasync def load_test(url, concurrent_requests=10, duration_seconds=60):\\n    \\\"\\\"\\\"\\n    Perform load testing on your model endpoint\\n    \\\"\\\"\\\"\\n    results = []\\n    end_time = time.time() + duration_seconds\\n    \\n    async with aiohttp.ClientSession() as session:\\n        while time.time() < end_time:\\n            tasks = []\\n            \\n            for _ in range(concurrent_requests):\\n                task = make_test_request(session, url)\\n                tasks.append(task)\\n            \\n            batch_results = await asyncio.gather(*tasks, return_exceptions=True)\\n            results.extend([r for r in batch_results if not isinstance(r, Exception)])\\n            \\n            await asyncio.sleep(1)  # 1 second between batches\\n    \\n    # Analyze results\\n    latencies = [r['latency'] for r in results]\\n    success_rate = len([r for r in results if r['success']]) / len(results)\\n    \\n    return {\\n        'total_requests': len(results),\\n        'success_rate': success_rate,\\n        'avg_latency': statistics.mean(latencies),\\n        'p95_latency': statistics.quantiles(latencies, n=20)[18],  # 95th percentile\\n        'p99_latency': statistics.quantiles(latencies, n=100)[98]  # 99th percentile\\n    }\\n\\nasync def make_test_request(session, url):\\n    start_time = time.time()\\n    \\n    try:\\n        async with session.post(\\n            f\\\"{url}/v1/chat/completions\\\",\\n            json={\\n                \\\"model\\\": \\\"your-model\\\",\\n                \\\"messages\\\": [{\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Hello\\\"}],\\n                \\\"max_tokens\\\": 50\\n            },\\n            timeout=30\\n        ) as response:\\n            await response.text()\\n            return {\\n                'success': response.status == 200,\\n                'latency': time.time() - start_time,\\n                'status_code': response.status\\n            }\\n    except Exception as e:\\n        return {\\n            'success': False,\\n            'latency': time.time() - start_time,\\n            'error': str(e)\\n        }\\n```\\n\\n## Alert Configuration\\n\\n### Alert Types\\n\\n#### Critical Alerts\\n- **Service down**: Model endpoint not responding\\n- **High error rate**: Error rate > 5% for 5 minutes\\n- **Severe latency**: Response time > 30 seconds\\n- **Resource exhaustion**: Memory/disk usage > 95%\\n\\n#### Warning Alerts\\n- **Moderate error rate**: Error rate > 2% for 10 minutes\\n- **Increased latency**: Response time > 10 seconds\\n- **Resource pressure**: Memory/disk usage > 85%\\n- **Low user ratings**: Average rating < 3.5\\n\\n#### Info Alerts\\n- **Traffic spikes**: Request volume > 150% of normal\\n- **Performance improvements**: Response time improved > 20%\\n- **New user feedback**: User rating received\\n- **Revenue milestones**: Daily/weekly revenue targets met\\n\\n### Alert Channels\\n\\n#### Email Alerts\\n```python\\nimport smtplib\\nfrom email.mime.text import MIMEText\\n\\ndef send_email_alert(subject, message, recipients):\\n    msg = MIMEText(message)\\n    msg['Subject'] = subject\\n    msg['From'] = 'alerts@yourcompany.com'\\n    msg['To'] = ', '.join(recipients)\\n    \\n    server = smtplib.SMTP('smtp.gmail.com', 587)\\n    server.starttls()\\n    server.login('alerts@yourcompany.com', 'password')\\n    server.send_message(msg)\\n    server.quit()\\n```\\n\\n#### Slack Integration\\n```python\\nimport requests\\n\\ndef send_slack_alert(message, webhook_url):\\n    payload = {\\n        'text': message,\\n        'username': 'AiMo Monitor',\\n        'icon_emoji': ':warning:'\\n    }\\n    \\n    response = requests.post(webhook_url, json=payload)\\n    return response.status_code == 200\\n```\\n\\n#### Webhook Alerts\\nConfigure webhook endpoints to receive alerts:\\n\\n```json\\n{\\n  \\\"webhook_url\\\": \\\"https://your-system.com/alerts\\\",\\n  \\\"alert_types\\\": [\\\"critical\\\", \\\"warning\\\"],\\n  \\\"signature_secret\\\": \\\"your_secret_key\\\"\\n}\\n```\\n\\n## Performance Optimization\\n\\n### Latency Optimization\\n\\n#### Profiling and Bottlenecks\\n```python\\nimport cProfile\\nimport pstats\\nfrom functools import wraps\\n\\ndef profile_request(func):\\n    @wraps(func)\\n    def wrapper(*args, **kwargs):\\n        pr = cProfile.Profile()\\n        pr.enable()\\n        \\n        try:\\n            result = func(*args, **kwargs)\\n            return result\\n        finally:\\n            pr.disable()\\n            \\n            # Log top time consumers\\n            stats = pstats.Stats(pr)\\n            stats.sort_stats('cumulative')\\n            \\n            # Save profile for analysis\\n            stats.dump_stats(f\\\"profile_{int(time.time())}.prof\\\")\\n    \\n    return wrapper\\n\\n@profile_request\\ndef generate_response(request_data):\\n    # Your model inference code\\n    pass\\n```\\n\\n#### Caching Strategy\\n```python\\nimport redis\\nimport hashlib\\nimport json\\n\\ncache = redis.Redis(host='localhost', port=6379, db=0)\\n\\ndef cache_response(ttl=3600):\\n    def decorator(func):\\n        @wraps(func)\\n        def wrapper(*args, **kwargs):\\n            # Create cache key from request\\n            cache_key = hashlib.md5(\\n                json.dumps(kwargs, sort_keys=True).encode()\\n            ).hexdigest()\\n            \\n            # Check cache first\\n            cached_result = cache.get(cache_key)\\n            if cached_result:\\n                return json.loads(cached_result)\\n            \\n            # Generate response\\n            result = func(*args, **kwargs)\\n            \\n            # Cache result\\n            cache.setex(cache_key, ttl, json.dumps(result))\\n            \\n            return result\\n        return wrapper\\n    return decorator\\n\\n@cache_response(ttl=1800)  # Cache for 30 minutes\\ndef generate_completion(messages, model, **params):\\n    # Your model implementation\\n    pass\\n```\\n\\n### Scaling Optimization\\n\\n#### Auto-scaling Configuration\\n```yaml\\n# Kubernetes HPA configuration\\napiVersion: autoscaling/v2\\nkind: HorizontalPodAutoscaler\\nmetadata:\\n  name: model-server-hpa\\nspec:\\n  scaleTargetRef:\\n    apiVersion: apps/v1\\n    kind: Deployment\\n    name: model-server\\n  minReplicas: 2\\n  maxReplicas: 20\\n  metrics:\\n  - type: Resource\\n    resource:\\n      name: cpu\\n      target:\\n        type: Utilization\\n        averageUtilization: 70\\n  - type: Resource\\n    resource:\\n      name: memory\\n      target:\\n        type: Utilization\\n        averageUtilization: 80\\n  - type: Pods\\n    pods:\\n      metric:\\n        name: requests_per_second\\n      target:\\n        type: AverageValue\\n        averageValue: \\\"10\\\"\\n```\\n\\n#### Load Balancing\\n```nginx\\n# Nginx load balancer configuration\\nupstream model_servers {\\n    least_conn;\\n    server model-1:8000 max_fails=3 fail_timeout=30s;\\n    server model-2:8000 max_fails=3 fail_timeout=30s;\\n    server model-3:8000 max_fails=3 fail_timeout=30s;\\n}\\n\\nserver {\\n    listen 80;\\n    \\n    location /v1/ {\\n        proxy_pass http://model_servers;\\n        proxy_set_header Host $host;\\n        proxy_set_header X-Real-IP $remote_addr;\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\n        proxy_timeout 60s;\\n        proxy_read_timeout 60s;\\n    }\\n    \\n    location /health {\\n        access_log off;\\n        proxy_pass http://model_servers;\\n    }\\n}\\n```\\n\\n## Quality Monitoring\\n\\n### User Feedback Analysis\\n\\n#### Rating Trends\\n```python\\ndef analyze_rating_trends(days=30):\\n    \\\"\\\"\\\"\\n    Analyze user rating trends over time\\n    \\\"\\\"\\\"\\n    end_date = datetime.now()\\n    start_date = end_date - timedelta(days=days)\\n    \\n    ratings = get_ratings(start_date, end_date)\\n    \\n    # Calculate trends\\n    daily_averages = {}\\n    for rating in ratings:\\n        date = rating['date'].strftime('%Y-%m-%d')\\n        if date not in daily_averages:\\n            daily_averages[date] = []\\n        daily_averages[date].append(rating['score'])\\n    \\n    # Compute statistics\\n    trend_data = []\\n    for date, scores in daily_averages.items():\\n        trend_data.append({\\n            'date': date,\\n            'average': sum(scores) / len(scores),\\n            'count': len(scores),\\n            'distribution': {\\n                '5_star': len([s for s in scores if s == 5]),\\n                '4_star': len([s for s in scores if s == 4]),\\n                '3_star': len([s for s in scores if s == 3]),\\n                '2_star': len([s for s in scores if s == 2]),\\n                '1_star': len([s for s in scores if s == 1])\\n            }\\n        })\\n    \\n    return trend_data\\n```\\n\\n#### Feedback Analysis\\n```python\\nfrom textblob import TextBlob\\n\\ndef analyze_user_feedback(feedback_text):\\n    \\\"\\\"\\\"\\n    Analyze user feedback for sentiment and key themes\\n    \\\"\\\"\\\"\\n    blob = TextBlob(feedback_text)\\n    \\n    # Sentiment analysis\\n    sentiment = blob.sentiment\\n    \\n    # Extract key phrases\\n    noun_phrases = list(blob.noun_phrases)\\n    \\n    # Categorize feedback\\n    categories = {\\n        'speed': any(word in feedback_text.lower() for word in ['fast', 'slow', 'quick', 'speed', 'latency']),\\n        'quality': any(word in feedback_text.lower() for word in ['quality', 'accurate', 'wrong', 'correct']),\\n        'reliability': any(word in feedback_text.lower() for word in ['reliable', 'down', 'error', 'failed']),\\n        'cost': any(word in feedback_text.lower() for word in ['cheap', 'expensive', 'cost', 'price'])\\n    }\\n    \\n    return {\\n        'sentiment': {\\n            'polarity': sentiment.polarity,  # -1 to 1\\n            'subjectivity': sentiment.subjectivity  # 0 to 1\\n        },\\n        'key_phrases': noun_phrases,\\n        'categories': categories\\n    }\\n```\\n\\n### Automated Quality Checks\\n\\n#### Output Quality Monitoring\\n```python\\ndef quality_check_response(input_text, output_text, model_type):\\n    \\\"\\\"\\\"\\n    Perform automated quality checks on model output\\n    \\\"\\\"\\\"\\n    checks = {\\n        'length_appropriate': check_response_length(input_text, output_text),\\n        'relevance': check_relevance(input_text, output_text),\\n        'coherence': check_coherence(output_text),\\n        'safety': check_content_safety(output_text),\\n        'language_quality': check_language_quality(output_text)\\n    }\\n    \\n    # Calculate overall quality score\\n    quality_score = sum(checks.values()) / len(checks)\\n    \\n    return {\\n        'quality_score': quality_score,\\n        'checks': checks,\\n        'timestamp': time.time()\\n    }\\n\\ndef check_response_length(input_text, output_text):\\n    \\\"\\\"\\\"Check if response length is appropriate\\\"\\\"\\\"\\n    input_length = len(input_text.split())\\n    output_length = len(output_text.split())\\n    \\n    # Response should be proportional to input complexity\\n    expected_ratio = min(max(input_length / 10, 1), 10)\\n    actual_ratio = output_length / max(input_length, 1)\\n    \\n    return 1.0 if 0.5 <= actual_ratio / expected_ratio <= 2.0 else 0.5\\n\\ndef check_relevance(input_text, output_text):\\n    \\\"\\\"\\\"Check if response is relevant to input\\\"\\\"\\\"\\n    # Use embeddings to compute semantic similarity\\n    input_embedding = get_embedding(input_text)\\n    output_embedding = get_embedding(output_text)\\n    \\n    similarity = cosine_similarity(input_embedding, output_embedding)\\n    return min(similarity * 2, 1.0)  # Scale to 0-1\\n```\\n\\n## Troubleshooting\\n\\n### Performance Issues\\n\\n#### High Latency Diagnosis\\n```python\\ndef diagnose_latency_issues():\\n    \\\"\\\"\\\"\\n    Diagnose potential causes of high latency\\n    \\\"\\\"\\\"\\n    diagnostics = {}\\n    \\n    # Check system resources\\n    diagnostics['cpu_usage'] = psutil.cpu_percent(interval=1)\\n    diagnostics['memory_usage'] = psutil.virtual_memory().percent\\n    diagnostics['gpu_usage'] = get_gpu_utilization()  # Custom function\\n    \\n    # Check model loading\\n    diagnostics['model_loaded'] = is_model_loaded()\\n    diagnostics['model_size'] = get_model_size()\\n    \\n    # Check network\\n    diagnostics['network_latency'] = ping_external_service()\\n    \\n    # Check recent errors\\n    diagnostics['recent_errors'] = get_recent_error_count(minutes=10)\\n    \\n    # Generate recommendations\\n    recommendations = []\\n    \\n    if diagnostics['cpu_usage'] > 90:\\n        recommendations.append(\\\"High CPU usage - consider scaling horizontally\\\")\\n    \\n    if diagnostics['memory_usage'] > 90:\\n        recommendations.append(\\\"High memory usage - check for memory leaks\\\")\\n    \\n    if diagnostics['gpu_usage'] > 95:\\n        recommendations.append(\\\"GPU at capacity - add more GPU instances\\\")\\n    \\n    if diagnostics['recent_errors'] > 10:\\n        recommendations.append(\\\"High error rate - check logs for issues\\\")\\n    \\n    return {\\n        'diagnostics': diagnostics,\\n        'recommendations': recommendations\\n    }\\n```\\n\\n#### Error Rate Analysis\\n```python\\ndef analyze_error_patterns(hours=24):\\n    \\\"\\\"\\\"\\n    Analyze error patterns to identify root causes\\n    \\\"\\\"\\\"\\n    errors = get_recent_errors(hours=hours)\\n    \\n    # Group by error type\\n    error_types = {}\\n    for error in errors:\\n        error_type = error['type']\\n        if error_type not in error_types:\\n            error_types[error_type] = []\\n        error_types[error_type].append(error)\\n    \\n    # Analyze patterns\\n    analysis = {}\\n    for error_type, error_list in error_types.items():\\n        analysis[error_type] = {\\n            'count': len(error_list),\\n            'rate': len(error_list) / hours,  # errors per hour\\n            'recent_spike': check_error_spike(error_list),\\n            'common_causes': identify_common_causes(error_list)\\n        }\\n    \\n    return analysis\\n```\\n\\n### Monitoring Issues\\n\\n#### Missing Metrics\\nCheck if monitoring is properly configured:\\n\\n```python\\ndef verify_monitoring_setup():\\n    \\\"\\\"\\\"\\n    Verify that monitoring is properly configured\\n    \\\"\\\"\\\"\\n    checks = {\\n        'prometheus_endpoint': check_endpoint_accessible('/metrics'),\\n        'health_endpoints': check_health_endpoints(),\\n        'log_collection': check_log_forwarding(),\\n        'alert_channels': test_alert_channels()\\n    }\\n    \\n    issues = [check for check, status in checks.items() if not status]\\n    \\n    if issues:\\n        print(f\\\"Monitoring issues found: {issues}\\\")\\n        return False\\n    \\n    print(\\\"Monitoring setup is healthy\\\")\\n    return True\\n```\\n\\n## Support and Resources\\n\\n### Monitoring Support\\n\\n- **Documentation**: Comprehensive monitoring guides\\n- **Dashboard training**: Video tutorials for dashboard usage\\n- **API examples**: Sample code for metrics integration\\n- **Best practices**: Performance optimization guides\\n\\n### Contact Information\\n\\n- **Monitoring support**: monitoring@aimo.network\\n- **Performance optimization**: performance@aimo.network\\n- **Technical assistance**: providers-tech@aimo.network\\n- **Emergency response**: urgent@aimo.network\\n\\n## Next Steps\\n\\nTo optimize your monitoring setup:\\n\\n1. **[Implement best practices](/provider-guide/best-practices)** for optimal performance\\n2. **[Review pricing strategy](/provider-guide/pricing)** based on performance data\\n3. **[Join the provider community](https://discord.gg/aimo-providers)** for monitoring tips\\n\\nNeed help with monitoring? Contact our team at monitoring@aimo.network\\n\",\"document\":[{\"href\":\"/provider-guide/monitoring#performance-monitoring\",\"html\":\"</header>\\n<p>Learn how to monitor, analyze, and optimize your model&#x27;s performance on AiMo Network.</p>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#performance-monitoring\",\"isPage\":true,\"text\":\"\\nLearn how to monitor, analyze, and optimize your model&#x27;s performance on AiMo Network.\\n\",\"title\":\"Performance Monitoring\",\"titles\":[]},{\"href\":\"/provider-guide/monitoring#monitoring-overview\",\"html\":\"\\n<p>Effective monitoring is crucial for maintaining high-quality service, maximizing revenue, and ensuring customer satisfaction. AiMo Network provides comprehensive monitoring tools and APIs for providers.</p>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#monitoring-overview\",\"isPage\":false,\"text\":\"\\nEffective monitoring is crucial for maintaining high-quality service, maximizing revenue, and ensuring customer satisfaction. AiMo Network provides comprehensive monitoring tools and APIs for providers.\\n\",\"title\":\"Monitoring Overview\",\"titles\":[\"Performance Monitoring\"]},{\"href\":\"/provider-guide/monitoring#key-metrics\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#key-metrics\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Key Metrics\",\"titles\":[\"Performance Monitoring\",\"Monitoring Overview\"]},{\"href\":\"/provider-guide/monitoring#performance-metrics\",\"html\":\"\\n<ul>\\n<li><strong>Response latency</strong>: Time from request to response</li>\\n<li><strong>Throughput</strong>: Requests handled per second</li>\\n<li><strong>Uptime</strong>: Percentage of time your model is available</li>\\n<li><strong>Error rate</strong>: Percentage of failed requests</li>\\n</ul>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#performance-metrics\",\"isPage\":false,\"text\":\"\\n\\nResponse latency: Time from request to response\\nThroughput: Requests handled per second\\nUptime: Percentage of time your model is available\\nError rate: Percentage of failed requests\\n\\n\",\"title\":\"Performance Metrics\",\"titles\":[\"Performance Monitoring\",\"Monitoring Overview\",\"Key Metrics\"]},{\"href\":\"/provider-guide/monitoring#quality-metrics\",\"html\":\"\\n<ul>\\n<li><strong>User ratings</strong>: 1-5 star ratings from users</li>\\n<li><strong>Output quality</strong>: Automated quality assessments</li>\\n<li><strong>Consistency</strong>: Variation in response quality</li>\\n<li><strong>Safety scores</strong>: Content safety and bias metrics</li>\\n</ul>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#quality-metrics\",\"isPage\":false,\"text\":\"\\n\\nUser ratings: 1-5 star ratings from users\\nOutput quality: Automated quality assessments\\nConsistency: Variation in response quality\\nSafety scores: Content safety and bias metrics\\n\\n\",\"title\":\"Quality Metrics\",\"titles\":[\"Performance Monitoring\",\"Monitoring Overview\",\"Key Metrics\"]},{\"href\":\"/provider-guide/monitoring#business-metrics\",\"html\":\"\\n<ul>\\n<li><strong>Request volume</strong>: Number of requests over time</li>\\n<li><strong>Revenue</strong>: Earnings from your model</li>\\n<li><strong>Market share</strong>: Your share of requests in your category</li>\\n<li><strong>Customer retention</strong>: Repeat usage patterns</li>\\n</ul>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#business-metrics\",\"isPage\":false,\"text\":\"\\n\\nRequest volume: Number of requests over time\\nRevenue: Earnings from your model\\nMarket share: Your share of requests in your category\\nCustomer retention: Repeat usage patterns\\n\\n\",\"title\":\"Business Metrics\",\"titles\":[\"Performance Monitoring\",\"Monitoring Overview\",\"Key Metrics\"]},{\"href\":\"/provider-guide/monitoring#monitoring-dashboard\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#monitoring-dashboard\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Monitoring Dashboard\",\"titles\":[\"Performance Monitoring\"]},{\"href\":\"/provider-guide/monitoring#provider-dashboard\",\"html\":\"\\n<p>Access your monitoring dashboard at <a href=\\\"https://dashboard.aimo.network/provider\\\">dashboard.aimo.network/provider</a>:</p>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#provider-dashboard\",\"isPage\":false,\"text\":\"\\nAccess your monitoring dashboard at dashboard.aimo.network/provider:\\n\",\"title\":\"Provider Dashboard\",\"titles\":[\"Performance Monitoring\",\"Monitoring Dashboard\"]},{\"href\":\"/provider-guide/monitoring#real-time-overview\",\"html\":\"\\n<ul>\\n<li><strong>Current status</strong>: Green/yellow/red health indicator</li>\\n<li><strong>Live metrics</strong>: Active requests, response time, error rate</li>\\n<li><strong>Revenue ticker</strong>: Real-time earnings updates</li>\\n<li><strong>Alerts</strong>: Critical issues requiring attention</li>\\n</ul>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#real-time-overview\",\"isPage\":false,\"text\":\"\\n\\nCurrent status: Green/yellow/red health indicator\\nLive metrics: Active requests, response time, error rate\\nRevenue ticker: Real-time earnings updates\\nAlerts: Critical issues requiring attention\\n\\n\",\"title\":\"Real-Time Overview\",\"titles\":[\"Performance Monitoring\",\"Monitoring Dashboard\",\"Provider Dashboard\"]},{\"href\":\"/provider-guide/monitoring#historical-analytics\",\"html\":\"\\n<ul>\\n<li><strong>Time-series charts</strong>: Performance trends over time</li>\\n<li><strong>Comparative analysis</strong>: Your performance vs. market averages</li>\\n<li><strong>Detailed breakdowns</strong>: Metrics by user, region, or time period</li>\\n<li><strong>Custom date ranges</strong>: Flexible time period selection</li>\\n</ul>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#historical-analytics\",\"isPage\":false,\"text\":\"\\n\\nTime-series charts: Performance trends over time\\nComparative analysis: Your performance vs. market averages\\nDetailed breakdowns: Metrics by user, region, or time period\\nCustom date ranges: Flexible time period selection\\n\\n\",\"title\":\"Historical Analytics\",\"titles\":[\"Performance Monitoring\",\"Monitoring Dashboard\",\"Provider Dashboard\"]},{\"href\":\"/provider-guide/monitoring#api-monitoring\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#api-monitoring\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"API Monitoring\",\"titles\":[\"Performance Monitoring\",\"Monitoring Dashboard\"]},{\"href\":\"/provider-guide/monitoring#metrics-endpoint\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">curl</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> -X</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> GET</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> https://api.aimo.network/v1/provider/metrics</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -H</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;Authorization: Bearer YOUR_PROVIDER_KEY&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -G</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> -d</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;start_date=2024-01-01&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -d</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;end_date=2024-01-31&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -d</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;granularity=hourly&quot;</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#metrics-endpoint\",\"isPage\":false,\"text\":\"\\ncurl -X GET https://api.aimo.network/v1/provider/metrics \\\\\\n  -H &quot;Authorization: Bearer YOUR_PROVIDER_KEY&quot; \\\\\\n  -G -d &quot;start_date=2024-01-01&quot; \\\\\\n  -d &quot;end_date=2024-01-31&quot; \\\\\\n  -d &quot;granularity=hourly&quot;\\n\",\"title\":\"Metrics Endpoint\",\"titles\":[\"Performance Monitoring\",\"Monitoring Dashboard\",\"API Monitoring\"]},{\"href\":\"/provider-guide/monitoring#response-format\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;success&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;data&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;period&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">      &quot;start&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;2024-01-01T00:00:00Z&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">      &quot;end&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;2024-01-31T23:59:59Z&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;summary&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">      &quot;total_requests&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">15420</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">      &quot;total_revenue&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">234.67</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">      &quot;average_latency_ms&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1840</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">      &quot;uptime_percentage&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">99.7</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">      &quot;error_rate&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0.8</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">      &quot;average_rating&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4.3</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;timeseries&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">        &quot;timestamp&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;2024-01-01T00:00:00Z&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">        &quot;requests&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">45</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">        &quot;latency_ms&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1650</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">        &quot;errors&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">        &quot;revenue&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">2.34</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#response-format\",\"isPage\":false,\"text\":\"\\n{\\n  &quot;success&quot;: true,\\n  &quot;data&quot;: {\\n    &quot;period&quot;: {\\n      &quot;start&quot;: &quot;2024-01-01T00:00:00Z&quot;,\\n      &quot;end&quot;: &quot;2024-01-31T23:59:59Z&quot;\\n    },\\n    &quot;summary&quot;: {\\n      &quot;total_requests&quot;: 15420,\\n      &quot;total_revenue&quot;: 234.67,\\n      &quot;average_latency_ms&quot;: 1840,\\n      &quot;uptime_percentage&quot;: 99.7,\\n      &quot;error_rate&quot;: 0.8,\\n      &quot;average_rating&quot;: 4.3\\n    },\\n    &quot;timeseries&quot;: [\\n      {\\n        &quot;timestamp&quot;: &quot;2024-01-01T00:00:00Z&quot;,\\n        &quot;requests&quot;: 45,\\n        &quot;latency_ms&quot;: 1650,\\n        &quot;errors&quot;: 1,\\n        &quot;revenue&quot;: 2.34\\n      }\\n    ]\\n  }\\n}\\n\",\"title\":\"Response Format\",\"titles\":[\"Performance Monitoring\",\"Monitoring Dashboard\",\"API Monitoring\"]},{\"href\":\"/provider-guide/monitoring#setting-up-monitoring\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#setting-up-monitoring\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Setting Up Monitoring\",\"titles\":[\"Performance Monitoring\"]},{\"href\":\"/provider-guide/monitoring#internal-monitoring\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#internal-monitoring\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Internal Monitoring\",\"titles\":[\"Performance Monitoring\",\"Setting Up Monitoring\"]},{\"href\":\"/provider-guide/monitoring#application-metrics\",\"html\":\"\\n<p>Implement metrics collection in your model server:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> time</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> logging</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> prometheus_client </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> Counter, Histogram, Gauge</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> functools </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> wraps</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Prometheus metrics</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">REQUEST_COUNT</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> Counter(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;model_requests_total&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Total requests&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;status&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">REQUEST_DURATION</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> Histogram(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;model_request_duration_seconds&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Request duration&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">ACTIVE_REQUESTS</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> Gauge(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;model_active_requests&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Active requests&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">GPU_UTILIZATION</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> Gauge(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;model_gpu_utilization_percent&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;GPU utilization&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> monitor_request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(func):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    @wraps</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(func)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> wrapper</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">args, </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">**</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">kwargs):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        start_time </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> time.time()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        ACTIVE_REQUESTS</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.inc()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            result </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> func(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">args, </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">**</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">kwargs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">            REQUEST_COUNT</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.labels(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">status</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;success&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">).inc()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> result</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        except</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Exception</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> e:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">            REQUEST_COUNT</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.labels(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">status</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;error&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">).inc()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            raise</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        finally</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            duration </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> time.time() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">-</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> start_time</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">            REQUEST_DURATION</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.observe(duration)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">            ACTIVE_REQUESTS</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.dec()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> wrapper</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">@app.route</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;/v1/chat/completions&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">methods</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;POST&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">@monitor_request</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> chat_completion</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">():</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Your model implementation</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    pass</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#application-metrics\",\"isPage\":false,\"text\":\"\\nImplement metrics collection in your model server:\\nimport time\\nimport logging\\nfrom prometheus_client import Counter, Histogram, Gauge\\nfrom functools import wraps\\n \\n# Prometheus metrics\\nREQUEST_COUNT = Counter(&#x27;model_requests_total&#x27;, &#x27;Total requests&#x27;, [&#x27;status&#x27;])\\nREQUEST_DURATION = Histogram(&#x27;model_request_duration_seconds&#x27;, &#x27;Request duration&#x27;)\\nACTIVE_REQUESTS = Gauge(&#x27;model_active_requests&#x27;, &#x27;Active requests&#x27;)\\nGPU_UTILIZATION = Gauge(&#x27;model_gpu_utilization_percent&#x27;, &#x27;GPU utilization&#x27;)\\n \\ndef monitor_request(func):\\n    @wraps(func)\\n    def wrapper(*args, **kwargs):\\n        start_time = time.time()\\n        ACTIVE_REQUESTS.inc()\\n        \\n        try:\\n            result = func(*args, **kwargs)\\n            REQUEST_COUNT.labels(status=&#x27;success&#x27;).inc()\\n            return result\\n        except Exception as e:\\n            REQUEST_COUNT.labels(status=&#x27;error&#x27;).inc()\\n            raise\\n        finally:\\n            duration = time.time() - start_time\\n            REQUEST_DURATION.observe(duration)\\n            ACTIVE_REQUESTS.dec()\\n    \\n    return wrapper\\n \\n@app.route(&#x27;/v1/chat/completions&#x27;, methods=[&#x27;POST&#x27;])\\n@monitor_request\\ndef chat_completion():\\n    # Your model implementation\\n    pass\\n\",\"title\":\"Application Metrics\",\"titles\":[\"Performance Monitoring\",\"Setting Up Monitoring\",\"Internal Monitoring\"]},{\"href\":\"/provider-guide/monitoring#health-checks\",\"html\":\"\\n<p>Implement comprehensive health endpoints:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> psutil</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> torch</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> flask </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> jsonify</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">@app.route</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;/health/liveness&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">methods</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;GET&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> liveness_check</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">():</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;Basic liveness check&quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> jsonify({</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;status&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;alive&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;timestamp&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: time.time()})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">@app.route</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;/health/readiness&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">methods</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;GET&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> readiness_check</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">():</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;Detailed readiness check&quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    checks </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;model_loaded&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: is_model_loaded(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;gpu_available&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: torch.cuda.is_available() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> torch.cuda.is_available() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> True</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;memory_ok&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: psutil.virtual_memory().percent </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&lt;</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 90</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;disk_ok&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: psutil.disk_usage(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;/&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">).percent </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&lt;</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 95</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    all_healthy </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> all</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(checks.values())</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    status_code </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 200</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> all_healthy </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 503</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> jsonify({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;status&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;ready&#x27;</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> all_healthy </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;not_ready&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;checks&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: checks,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;timestamp&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: time.time()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }), status_code</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">@app.route</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;/metrics&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">methods</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;GET&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> prometheus_metrics</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">():</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;Prometheus metrics endpoint&quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> prometheus_client </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> generate_latest</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> generate_latest(), </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">200</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, {</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Content-Type&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;text/plain&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#health-checks\",\"isPage\":false,\"text\":\"\\nImplement comprehensive health endpoints:\\nimport psutil\\nimport torch\\nfrom flask import jsonify\\n \\n@app.route(&#x27;/health/liveness&#x27;, methods=[&#x27;GET&#x27;])\\ndef liveness_check():\\n    &quot;&quot;&quot;Basic liveness check&quot;&quot;&quot;\\n    return jsonify({&#x27;status&#x27;: &#x27;alive&#x27;, &#x27;timestamp&#x27;: time.time()})\\n \\n@app.route(&#x27;/health/readiness&#x27;, methods=[&#x27;GET&#x27;])\\ndef readiness_check():\\n    &quot;&quot;&quot;Detailed readiness check&quot;&quot;&quot;\\n    checks = {\\n        &#x27;model_loaded&#x27;: is_model_loaded(),\\n        &#x27;gpu_available&#x27;: torch.cuda.is_available() if torch.cuda.is_available() else True,\\n        &#x27;memory_ok&#x27;: psutil.virtual_memory().percent &lt; 90,\\n        &#x27;disk_ok&#x27;: psutil.disk_usage(&#x27;/&#x27;).percent &lt; 95\\n    }\\n    \\n    all_healthy = all(checks.values())\\n    status_code = 200 if all_healthy else 503\\n    \\n    return jsonify({\\n        &#x27;status&#x27;: &#x27;ready&#x27; if all_healthy else &#x27;not_ready&#x27;,\\n        &#x27;checks&#x27;: checks,\\n        &#x27;timestamp&#x27;: time.time()\\n    }), status_code\\n \\n@app.route(&#x27;/metrics&#x27;, methods=[&#x27;GET&#x27;])\\ndef prometheus_metrics():\\n    &quot;&quot;&quot;Prometheus metrics endpoint&quot;&quot;&quot;\\n    from prometheus_client import generate_latest\\n    return generate_latest(), 200, {&#x27;Content-Type&#x27;: &#x27;text/plain&#x27;}\\n\",\"title\":\"Health Checks\",\"titles\":[\"Performance Monitoring\",\"Setting Up Monitoring\",\"Internal Monitoring\"]},{\"href\":\"/provider-guide/monitoring#external-monitoring\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#external-monitoring\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"External Monitoring\",\"titles\":[\"Performance Monitoring\",\"Setting Up Monitoring\"]},{\"href\":\"/provider-guide/monitoring#uptime-monitoring\",\"html\":\"\\n<p>Monitor your endpoints from external services:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Simple uptime monitor</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> time</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> smtplib</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> check_endpoint_health</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(url, timeout</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">30</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests.get(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">url</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">/health&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">timeout</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">timeout)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;status&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;up&#x27;</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.status_code </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 200</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> else</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;down&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;status_code&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: response.status_code,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;response_time&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: response.elapsed.total_seconds(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;timestamp&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: time.time()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    except</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests.RequestException </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> e:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;status&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;down&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;error&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">str</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(e),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;timestamp&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: time.time()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> send_alert</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(message):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Send email/slack alert</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    pass</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Monitor loop</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">while</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> True</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    health </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> check_endpoint_health(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;https://your-model.api.com&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> health[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;status&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;down&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        send_alert(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Model endpoint is down: </span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">health</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    time.sleep(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">60</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Check every minute</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#uptime-monitoring\",\"isPage\":false,\"text\":\"\\nMonitor your endpoints from external services:\\n# Simple uptime monitor\\nimport requests\\nimport time\\nimport smtplib\\n \\ndef check_endpoint_health(url, timeout=30):\\n    try:\\n        response = requests.get(f&quot;{url}/health&quot;, timeout=timeout)\\n        return {\\n            &#x27;status&#x27;: &#x27;up&#x27; if response.status_code == 200 else &#x27;down&#x27;,\\n            &#x27;status_code&#x27;: response.status_code,\\n            &#x27;response_time&#x27;: response.elapsed.total_seconds(),\\n            &#x27;timestamp&#x27;: time.time()\\n        }\\n    except requests.RequestException as e:\\n        return {\\n            &#x27;status&#x27;: &#x27;down&#x27;,\\n            &#x27;error&#x27;: str(e),\\n            &#x27;timestamp&#x27;: time.time()\\n        }\\n \\ndef send_alert(message):\\n    # Send email/slack alert\\n    pass\\n \\n# Monitor loop\\nwhile True:\\n    health = check_endpoint_health(&quot;https://your-model.api.com&quot;)\\n    \\n    if health[&#x27;status&#x27;] == &#x27;down&#x27;:\\n        send_alert(f&quot;Model endpoint is down: {health}&quot;)\\n    \\n    time.sleep(60)  # Check every minute\\n\",\"title\":\"Uptime Monitoring\",\"titles\":[\"Performance Monitoring\",\"Setting Up Monitoring\",\"External Monitoring\"]},{\"href\":\"/provider-guide/monitoring#performance-testing\",\"html\":\"\\n<p>Regular performance testing to catch regressions:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> asyncio</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> aiohttp</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> statistics</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">async</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> load_test</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(url, concurrent_requests</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">10</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, duration_seconds</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">60</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    Perform load testing on your model endpoint</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    results </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> []</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    end_time </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> time.time() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">+</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> duration_seconds</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    async</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> with</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> aiohttp.ClientSession() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> session:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        while</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> time.time() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&lt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> end_time:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            tasks </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> []</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> _ </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> range</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(concurrent_requests):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                task </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> make_test_request(session, url)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                tasks.append(task)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            batch_results </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> asyncio.gather(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">tasks, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">return_exceptions</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">True</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            results.extend([r </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> r </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> batch_results </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">if</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> not</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> isinstance</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(r, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">Exception</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> asyncio.sleep(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># 1 second between batches</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Analyze results</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    latencies </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [r[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;latency&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> r </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> results]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    success_rate </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">([r </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> r </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> results </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> r[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;success&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]]) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">/</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(results)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;total_requests&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(results),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;success_rate&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: success_rate,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;avg_latency&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: statistics.mean(latencies),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;p95_latency&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: statistics.quantiles(latencies, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">n</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">18</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># 95th percentile</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;p99_latency&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: statistics.quantiles(latencies, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">n</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">100</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">98</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># 99th percentile</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">async</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> make_test_request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(session, url):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    start_time </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> time.time()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        async</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> with</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> session.post(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">url</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">/v1/chat/completions&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">            json</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &quot;model&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;your-model&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &quot;messages&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [{</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;role&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;user&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;content&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Hello&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &quot;max_tokens&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">50</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">            timeout</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">30</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        ) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.text()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &#x27;success&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: response.status </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 200</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &#x27;latency&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: time.time() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">-</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> start_time,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &#x27;status_code&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: response.status</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    except</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Exception</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> e:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;success&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">False</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;latency&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: time.time() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">-</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> start_time,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;error&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">str</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(e)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#performance-testing\",\"isPage\":false,\"text\":\"\\nRegular performance testing to catch regressions:\\nimport asyncio\\nimport aiohttp\\nimport statistics\\n \\nasync def load_test(url, concurrent_requests=10, duration_seconds=60):\\n    &quot;&quot;&quot;\\n    Perform load testing on your model endpoint\\n    &quot;&quot;&quot;\\n    results = []\\n    end_time = time.time() + duration_seconds\\n    \\n    async with aiohttp.ClientSession() as session:\\n        while time.time() &lt; end_time:\\n            tasks = []\\n            \\n            for _ in range(concurrent_requests):\\n                task = make_test_request(session, url)\\n                tasks.append(task)\\n            \\n            batch_results = await asyncio.gather(*tasks, return_exceptions=True)\\n            results.extend([r for r in batch_results if not isinstance(r, Exception)])\\n            \\n            await asyncio.sleep(1)  # 1 second between batches\\n    \\n    # Analyze results\\n    latencies = [r[&#x27;latency&#x27;] for r in results]\\n    success_rate = len([r for r in results if r[&#x27;success&#x27;]]) / len(results)\\n    \\n    return {\\n        &#x27;total_requests&#x27;: len(results),\\n        &#x27;success_rate&#x27;: success_rate,\\n        &#x27;avg_latency&#x27;: statistics.mean(latencies),\\n        &#x27;p95_latency&#x27;: statistics.quantiles(latencies, n=20)[18],  # 95th percentile\\n        &#x27;p99_latency&#x27;: statistics.quantiles(latencies, n=100)[98]  # 99th percentile\\n    }\\n \\nasync def make_test_request(session, url):\\n    start_time = time.time()\\n    \\n    try:\\n        async with session.post(\\n            f&quot;{url}/v1/chat/completions&quot;,\\n            json={\\n                &quot;model&quot;: &quot;your-model&quot;,\\n                &quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello&quot;}],\\n                &quot;max_tokens&quot;: 50\\n            },\\n            timeout=30\\n        ) as response:\\n            await response.text()\\n            return {\\n                &#x27;success&#x27;: response.status == 200,\\n                &#x27;latency&#x27;: time.time() - start_time,\\n                &#x27;status_code&#x27;: response.status\\n            }\\n    except Exception as e:\\n        return {\\n            &#x27;success&#x27;: False,\\n            &#x27;latency&#x27;: time.time() - start_time,\\n            &#x27;error&#x27;: str(e)\\n        }\\n\",\"title\":\"Performance Testing\",\"titles\":[\"Performance Monitoring\",\"Setting Up Monitoring\",\"External Monitoring\"]},{\"href\":\"/provider-guide/monitoring#alert-configuration\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#alert-configuration\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Alert Configuration\",\"titles\":[\"Performance Monitoring\"]},{\"href\":\"/provider-guide/monitoring#alert-types\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#alert-types\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Alert Types\",\"titles\":[\"Performance Monitoring\",\"Alert Configuration\"]},{\"href\":\"/provider-guide/monitoring#critical-alerts\",\"html\":\"\\n<ul>\\n<li><strong>Service down</strong>: Model endpoint not responding</li>\\n<li><strong>High error rate</strong>: Error rate &gt; 5% for 5 minutes</li>\\n<li><strong>Severe latency</strong>: Response time &gt; 30 seconds</li>\\n<li><strong>Resource exhaustion</strong>: Memory/disk usage &gt; 95%</li>\\n</ul>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#critical-alerts\",\"isPage\":false,\"text\":\"\\n\\nService down: Model endpoint not responding\\nHigh error rate: Error rate &gt; 5% for 5 minutes\\nSevere latency: Response time &gt; 30 seconds\\nResource exhaustion: Memory/disk usage &gt; 95%\\n\\n\",\"title\":\"Critical Alerts\",\"titles\":[\"Performance Monitoring\",\"Alert Configuration\",\"Alert Types\"]},{\"href\":\"/provider-guide/monitoring#warning-alerts\",\"html\":\"\\n<ul>\\n<li><strong>Moderate error rate</strong>: Error rate &gt; 2% for 10 minutes</li>\\n<li><strong>Increased latency</strong>: Response time &gt; 10 seconds</li>\\n<li><strong>Resource pressure</strong>: Memory/disk usage &gt; 85%</li>\\n<li><strong>Low user ratings</strong>: Average rating &lt; 3.5</li>\\n</ul>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#warning-alerts\",\"isPage\":false,\"text\":\"\\n\\nModerate error rate: Error rate &gt; 2% for 10 minutes\\nIncreased latency: Response time &gt; 10 seconds\\nResource pressure: Memory/disk usage &gt; 85%\\nLow user ratings: Average rating &lt; 3.5\\n\\n\",\"title\":\"Warning Alerts\",\"titles\":[\"Performance Monitoring\",\"Alert Configuration\",\"Alert Types\"]},{\"href\":\"/provider-guide/monitoring#info-alerts\",\"html\":\"\\n<ul>\\n<li><strong>Traffic spikes</strong>: Request volume &gt; 150% of normal</li>\\n<li><strong>Performance improvements</strong>: Response time improved &gt; 20%</li>\\n<li><strong>New user feedback</strong>: User rating received</li>\\n<li><strong>Revenue milestones</strong>: Daily/weekly revenue targets met</li>\\n</ul>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#info-alerts\",\"isPage\":false,\"text\":\"\\n\\nTraffic spikes: Request volume &gt; 150% of normal\\nPerformance improvements: Response time improved &gt; 20%\\nNew user feedback: User rating received\\nRevenue milestones: Daily/weekly revenue targets met\\n\\n\",\"title\":\"Info Alerts\",\"titles\":[\"Performance Monitoring\",\"Alert Configuration\",\"Alert Types\"]},{\"href\":\"/provider-guide/monitoring#alert-channels\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#alert-channels\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Alert Channels\",\"titles\":[\"Performance Monitoring\",\"Alert Configuration\"]},{\"href\":\"/provider-guide/monitoring#email-alerts\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> smtplib</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> email.mime.text </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> MIMEText</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> send_email_alert</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(subject, message, recipients):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    msg </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> MIMEText(message)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    msg[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Subject&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> subject</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    msg[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;From&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;alerts@yourcompany.com&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    msg[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;To&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;, &#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.join(recipients)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    server </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> smtplib.SMTP(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;smtp.gmail.com&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">587</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    server.starttls()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    server.login(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;alerts@yourcompany.com&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;password&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    server.send_message(msg)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    server.quit()</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#email-alerts\",\"isPage\":false,\"text\":\"\\nimport smtplib\\nfrom email.mime.text import MIMEText\\n \\ndef send_email_alert(subject, message, recipients):\\n    msg = MIMEText(message)\\n    msg[&#x27;Subject&#x27;] = subject\\n    msg[&#x27;From&#x27;] = &#x27;alerts@yourcompany.com&#x27;\\n    msg[&#x27;To&#x27;] = &#x27;, &#x27;.join(recipients)\\n    \\n    server = smtplib.SMTP(&#x27;smtp.gmail.com&#x27;, 587)\\n    server.starttls()\\n    server.login(&#x27;alerts@yourcompany.com&#x27;, &#x27;password&#x27;)\\n    server.send_message(msg)\\n    server.quit()\\n\",\"title\":\"Email Alerts\",\"titles\":[\"Performance Monitoring\",\"Alert Configuration\",\"Alert Channels\"]},{\"href\":\"/provider-guide/monitoring#slack-integration\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> send_slack_alert</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(message, webhook_url):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    payload </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;text&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: message,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;username&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;AiMo Monitor&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;icon_emoji&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;:warning:&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests.post(webhook_url, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">json</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">payload)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.status_code </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 200</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#slack-integration\",\"isPage\":false,\"text\":\"\\nimport requests\\n \\ndef send_slack_alert(message, webhook_url):\\n    payload = {\\n        &#x27;text&#x27;: message,\\n        &#x27;username&#x27;: &#x27;AiMo Monitor&#x27;,\\n        &#x27;icon_emoji&#x27;: &#x27;:warning:&#x27;\\n    }\\n    \\n    response = requests.post(webhook_url, json=payload)\\n    return response.status_code == 200\\n\",\"title\":\"Slack Integration\",\"titles\":[\"Performance Monitoring\",\"Alert Configuration\",\"Alert Channels\"]},{\"href\":\"/provider-guide/monitoring#webhook-alerts\",\"html\":\"\\n<p>Configure webhook endpoints to receive alerts:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;webhook_url&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;https://your-system.com/alerts&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;alert_types&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;critical&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;warning&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;signature_secret&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;your_secret_key&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#webhook-alerts\",\"isPage\":false,\"text\":\"\\nConfigure webhook endpoints to receive alerts:\\n{\\n  &quot;webhook_url&quot;: &quot;https://your-system.com/alerts&quot;,\\n  &quot;alert_types&quot;: [&quot;critical&quot;, &quot;warning&quot;],\\n  &quot;signature_secret&quot;: &quot;your_secret_key&quot;\\n}\\n\",\"title\":\"Webhook Alerts\",\"titles\":[\"Performance Monitoring\",\"Alert Configuration\",\"Alert Channels\"]},{\"href\":\"/provider-guide/monitoring#performance-optimization\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#performance-optimization\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Performance Optimization\",\"titles\":[\"Performance Monitoring\"]},{\"href\":\"/provider-guide/monitoring#latency-optimization\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#latency-optimization\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Latency Optimization\",\"titles\":[\"Performance Monitoring\",\"Performance Optimization\"]},{\"href\":\"/provider-guide/monitoring#profiling-and-bottlenecks\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cProfile</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> pstats</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> functools </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> wraps</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> profile_request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(func):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    @wraps</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(func)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> wrapper</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">args, </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">**</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">kwargs):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        pr </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cProfile.Profile()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        pr.enable()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            result </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> func(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">args, </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">**</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">kwargs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> result</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        finally</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            pr.disable()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">            # Log top time consumers</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            stats </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> pstats.Stats(pr)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            stats.sort_stats(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;cumulative&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">            # Save profile for analysis</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            stats.dump_stats(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;profile_</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">int</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(time.time())</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.prof&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> wrapper</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">@profile_request</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> generate_response</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(request_data):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Your model inference code</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    pass</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#profiling-and-bottlenecks\",\"isPage\":false,\"text\":\"\\nimport cProfile\\nimport pstats\\nfrom functools import wraps\\n \\ndef profile_request(func):\\n    @wraps(func)\\n    def wrapper(*args, **kwargs):\\n        pr = cProfile.Profile()\\n        pr.enable()\\n        \\n        try:\\n            result = func(*args, **kwargs)\\n            return result\\n        finally:\\n            pr.disable()\\n            \\n            # Log top time consumers\\n            stats = pstats.Stats(pr)\\n            stats.sort_stats(&#x27;cumulative&#x27;)\\n            \\n            # Save profile for analysis\\n            stats.dump_stats(f&quot;profile_{int(time.time())}.prof&quot;)\\n    \\n    return wrapper\\n \\n@profile_request\\ndef generate_response(request_data):\\n    # Your model inference code\\n    pass\\n\",\"title\":\"Profiling and Bottlenecks\",\"titles\":[\"Performance Monitoring\",\"Performance Optimization\",\"Latency Optimization\"]},{\"href\":\"/provider-guide/monitoring#caching-strategy\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> redis</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> hashlib</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> json</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">cache </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> redis.Redis(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">host</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;localhost&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">port</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">6379</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">db</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> cache_response</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(ttl</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">3600</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> decorator</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(func):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        @wraps</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(func)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> wrapper</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">args, </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">**</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">kwargs):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">            # Create cache key from request</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            cache_key </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> hashlib.md5(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                json.dumps(kwargs, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">sort_keys</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">True</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">).encode()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            ).hexdigest()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">            # Check cache first</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            cached_result </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cache.get(cache_key)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cached_result:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">                return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> json.loads(cached_result)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">            # Generate response</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            result </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> func(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">args, </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">**</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">kwargs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">            # Cache result</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            cache.setex(cache_key, ttl, json.dumps(result))</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> result</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> wrapper</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> decorator</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">@cache_response</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">ttl</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1800</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Cache for 30 minutes</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> generate_completion</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(messages, model, </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">**</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">params):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Your model implementation</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    pass</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#caching-strategy\",\"isPage\":false,\"text\":\"\\nimport redis\\nimport hashlib\\nimport json\\n \\ncache = redis.Redis(host=&#x27;localhost&#x27;, port=6379, db=0)\\n \\ndef cache_response(ttl=3600):\\n    def decorator(func):\\n        @wraps(func)\\n        def wrapper(*args, **kwargs):\\n            # Create cache key from request\\n            cache_key = hashlib.md5(\\n                json.dumps(kwargs, sort_keys=True).encode()\\n            ).hexdigest()\\n            \\n            # Check cache first\\n            cached_result = cache.get(cache_key)\\n            if cached_result:\\n                return json.loads(cached_result)\\n            \\n            # Generate response\\n            result = func(*args, **kwargs)\\n            \\n            # Cache result\\n            cache.setex(cache_key, ttl, json.dumps(result))\\n            \\n            return result\\n        return wrapper\\n    return decorator\\n \\n@cache_response(ttl=1800)  # Cache for 30 minutes\\ndef generate_completion(messages, model, **params):\\n    # Your model implementation\\n    pass\\n\",\"title\":\"Caching Strategy\",\"titles\":[\"Performance Monitoring\",\"Performance Optimization\",\"Latency Optimization\"]},{\"href\":\"/provider-guide/monitoring#scaling-optimization\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#scaling-optimization\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Scaling Optimization\",\"titles\":[\"Performance Monitoring\",\"Performance Optimization\"]},{\"href\":\"/provider-guide/monitoring#auto-scaling-configuration\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Kubernetes HPA configuration</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">apiVersion</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">autoscaling/v2</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">kind</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">HorizontalPodAutoscaler</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">metadata</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">  name</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">model-server-hpa</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">spec</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">  scaleTargetRef</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">    apiVersion</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">apps/v1</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">    kind</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">Deployment</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">    name</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">model-server</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">  minReplicas</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">2</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">  maxReplicas</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">  metrics</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  - </span><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">type</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">Resource</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">    resource</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">      name</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">cpu</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">      target</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">        type</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">Utilization</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">        averageUtilization</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">70</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  - </span><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">type</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">Resource</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">    resource</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">      name</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">memory</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">      target</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">        type</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">Utilization</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">        averageUtilization</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">80</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  - </span><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">type</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">Pods</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">    pods</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">      metric</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">        name</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">requests_per_second</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">      target</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">        type</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">AverageValue</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#22863A;--shiki-dark:#8DDB8C\\\">        averageValue</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;10&quot;</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#auto-scaling-configuration\",\"isPage\":false,\"text\":\"\\n# Kubernetes HPA configuration\\napiVersion: autoscaling/v2\\nkind: HorizontalPodAutoscaler\\nmetadata:\\n  name: model-server-hpa\\nspec:\\n  scaleTargetRef:\\n    apiVersion: apps/v1\\n    kind: Deployment\\n    name: model-server\\n  minReplicas: 2\\n  maxReplicas: 20\\n  metrics:\\n  - type: Resource\\n    resource:\\n      name: cpu\\n      target:\\n        type: Utilization\\n        averageUtilization: 70\\n  - type: Resource\\n    resource:\\n      name: memory\\n      target:\\n        type: Utilization\\n        averageUtilization: 80\\n  - type: Pods\\n    pods:\\n      metric:\\n        name: requests_per_second\\n      target:\\n        type: AverageValue\\n        averageValue: &quot;10&quot;\\n\",\"title\":\"Auto-scaling Configuration\",\"titles\":[\"Performance Monitoring\",\"Performance Optimization\",\"Scaling Optimization\"]},{\"href\":\"/provider-guide/monitoring#load-balancing\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Nginx load balancer configuration</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">upstream</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> model_servers </span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    least_conn</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    server</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> model-1:8000 </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">max_fails</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">3</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> fail_timeout=30s;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    server</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> model-2:8000 </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">max_fails</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">3</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> fail_timeout=30s;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    server</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> model-3:8000 </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">max_fails</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">3</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> fail_timeout=30s;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">server</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    listen </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">80</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    location</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> /v1/ </span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        proxy_pass </span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">http://model_servers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        proxy_set_header </span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">Host $host;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        proxy_set_header </span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">X-Real-IP $remote_addr;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        proxy_set_header </span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        proxy_timeout </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">60s</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        proxy_read_timeout </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">60s</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    location</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> /health </span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        access_log </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">off</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        proxy_pass </span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">http://model_servers;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#load-balancing\",\"isPage\":false,\"text\":\"\\n# Nginx load balancer configuration\\nupstream model_servers {\\n    least_conn;\\n    server model-1:8000 max_fails=3 fail_timeout=30s;\\n    server model-2:8000 max_fails=3 fail_timeout=30s;\\n    server model-3:8000 max_fails=3 fail_timeout=30s;\\n}\\n \\nserver {\\n    listen 80;\\n    \\n    location /v1/ {\\n        proxy_pass http://model_servers;\\n        proxy_set_header Host $host;\\n        proxy_set_header X-Real-IP $remote_addr;\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\n        proxy_timeout 60s;\\n        proxy_read_timeout 60s;\\n    }\\n    \\n    location /health {\\n        access_log off;\\n        proxy_pass http://model_servers;\\n    }\\n}\\n\",\"title\":\"Load Balancing\",\"titles\":[\"Performance Monitoring\",\"Performance Optimization\",\"Scaling Optimization\"]},{\"href\":\"/provider-guide/monitoring#quality-monitoring\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#quality-monitoring\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Quality Monitoring\",\"titles\":[\"Performance Monitoring\"]},{\"href\":\"/provider-guide/monitoring#user-feedback-analysis\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#user-feedback-analysis\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"User Feedback Analysis\",\"titles\":[\"Performance Monitoring\",\"Quality Monitoring\"]},{\"href\":\"/provider-guide/monitoring#rating-trends\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> analyze_rating_trends</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(days</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">30</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    Analyze user rating trends over time</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    end_date </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> datetime.now()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    start_date </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> end_date </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">-</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> timedelta(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">days</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">days)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ratings </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> get_ratings(start_date, end_date)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Calculate trends</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    daily_averages </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> rating </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ratings:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        date </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> rating[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;date&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].strftime(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;%Y-%m-</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">%d</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> date </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">not</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> daily_averages:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            daily_averages[date] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> []</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        daily_averages[date].append(rating[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;score&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Compute statistics</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    trend_data </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> []</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> date, scores </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> daily_averages.items():</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        trend_data.append({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;date&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: date,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;average&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">sum</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(scores) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">/</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(scores),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;count&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(scores),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;distribution&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &#x27;5_star&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">([s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> scores </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 5</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &#x27;4_star&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">([s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> scores </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 4</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &#x27;3_star&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">([s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> scores </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 3</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &#x27;2_star&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">([s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> scores </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &#x27;1_star&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">([s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> scores </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> s </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> trend_data</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#rating-trends\",\"isPage\":false,\"text\":\"\\ndef analyze_rating_trends(days=30):\\n    &quot;&quot;&quot;\\n    Analyze user rating trends over time\\n    &quot;&quot;&quot;\\n    end_date = datetime.now()\\n    start_date = end_date - timedelta(days=days)\\n    \\n    ratings = get_ratings(start_date, end_date)\\n    \\n    # Calculate trends\\n    daily_averages = {}\\n    for rating in ratings:\\n        date = rating[&#x27;date&#x27;].strftime(&#x27;%Y-%m-%d&#x27;)\\n        if date not in daily_averages:\\n            daily_averages[date] = []\\n        daily_averages[date].append(rating[&#x27;score&#x27;])\\n    \\n    # Compute statistics\\n    trend_data = []\\n    for date, scores in daily_averages.items():\\n        trend_data.append({\\n            &#x27;date&#x27;: date,\\n            &#x27;average&#x27;: sum(scores) / len(scores),\\n            &#x27;count&#x27;: len(scores),\\n            &#x27;distribution&#x27;: {\\n                &#x27;5_star&#x27;: len([s for s in scores if s == 5]),\\n                &#x27;4_star&#x27;: len([s for s in scores if s == 4]),\\n                &#x27;3_star&#x27;: len([s for s in scores if s == 3]),\\n                &#x27;2_star&#x27;: len([s for s in scores if s == 2]),\\n                &#x27;1_star&#x27;: len([s for s in scores if s == 1])\\n            }\\n        })\\n    \\n    return trend_data\\n\",\"title\":\"Rating Trends\",\"titles\":[\"Performance Monitoring\",\"Quality Monitoring\",\"User Feedback Analysis\"]},{\"href\":\"/provider-guide/monitoring#feedback-analysis\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> textblob </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> TextBlob</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> analyze_user_feedback</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(feedback_text):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    Analyze user feedback for sentiment and key themes</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    blob </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> TextBlob(feedback_text)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Sentiment analysis</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    sentiment </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> blob.sentiment</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Extract key phrases</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    noun_phrases </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> list</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(blob.noun_phrases)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Categorize feedback</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    categories </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;speed&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">any</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(word </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> feedback_text.lower() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> word </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;fast&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;slow&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;quick&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;speed&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;latency&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;quality&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">any</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(word </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> feedback_text.lower() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> word </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;quality&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;accurate&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;wrong&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;correct&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;reliability&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">any</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(word </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> feedback_text.lower() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> word </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;reliable&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;down&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;error&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;failed&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;cost&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">any</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(word </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> feedback_text.lower() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> word </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;cheap&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;expensive&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;cost&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;price&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;sentiment&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;polarity&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: sentiment.polarity,  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># -1 to 1</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;subjectivity&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: sentiment.subjectivity  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># 0 to 1</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;key_phrases&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: noun_phrases,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;categories&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: categories</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#feedback-analysis\",\"isPage\":false,\"text\":\"\\nfrom textblob import TextBlob\\n \\ndef analyze_user_feedback(feedback_text):\\n    &quot;&quot;&quot;\\n    Analyze user feedback for sentiment and key themes\\n    &quot;&quot;&quot;\\n    blob = TextBlob(feedback_text)\\n    \\n    # Sentiment analysis\\n    sentiment = blob.sentiment\\n    \\n    # Extract key phrases\\n    noun_phrases = list(blob.noun_phrases)\\n    \\n    # Categorize feedback\\n    categories = {\\n        &#x27;speed&#x27;: any(word in feedback_text.lower() for word in [&#x27;fast&#x27;, &#x27;slow&#x27;, &#x27;quick&#x27;, &#x27;speed&#x27;, &#x27;latency&#x27;]),\\n        &#x27;quality&#x27;: any(word in feedback_text.lower() for word in [&#x27;quality&#x27;, &#x27;accurate&#x27;, &#x27;wrong&#x27;, &#x27;correct&#x27;]),\\n        &#x27;reliability&#x27;: any(word in feedback_text.lower() for word in [&#x27;reliable&#x27;, &#x27;down&#x27;, &#x27;error&#x27;, &#x27;failed&#x27;]),\\n        &#x27;cost&#x27;: any(word in feedback_text.lower() for word in [&#x27;cheap&#x27;, &#x27;expensive&#x27;, &#x27;cost&#x27;, &#x27;price&#x27;])\\n    }\\n    \\n    return {\\n        &#x27;sentiment&#x27;: {\\n            &#x27;polarity&#x27;: sentiment.polarity,  # -1 to 1\\n            &#x27;subjectivity&#x27;: sentiment.subjectivity  # 0 to 1\\n        },\\n        &#x27;key_phrases&#x27;: noun_phrases,\\n        &#x27;categories&#x27;: categories\\n    }\\n\",\"title\":\"Feedback Analysis\",\"titles\":[\"Performance Monitoring\",\"Quality Monitoring\",\"User Feedback Analysis\"]},{\"href\":\"/provider-guide/monitoring#automated-quality-checks\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#automated-quality-checks\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Automated Quality Checks\",\"titles\":[\"Performance Monitoring\",\"Quality Monitoring\"]},{\"href\":\"/provider-guide/monitoring#output-quality-monitoring\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> quality_check_response</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(input_text, output_text, model_type):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    Perform automated quality checks on model output</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    checks </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;length_appropriate&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: check_response_length(input_text, output_text),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;relevance&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: check_relevance(input_text, output_text),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;coherence&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: check_coherence(output_text),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;safety&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: check_content_safety(output_text),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;language_quality&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: check_language_quality(output_text)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Calculate overall quality score</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    quality_score </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> sum</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(checks.values()) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">/</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(checks)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;quality_score&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: quality_score,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;checks&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: checks,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;timestamp&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: time.time()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> check_response_length</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(input_text, output_text):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;Check if response length is appropriate&quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    input_length </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(input_text.split())</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    output_length </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(output_text.split())</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Response should be proportional to input complexity</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    expected_ratio </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> min</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">max</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(input_length </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">/</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 10</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">10</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    actual_ratio </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> output_length </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">/</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> max</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(input_length, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 1.0</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> if</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 0.5</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> &lt;=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> actual_ratio </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">/</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> expected_ratio </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&lt;=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 2.0</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> else</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 0.5</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> check_relevance</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(input_text, output_text):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;Check if response is relevant to input&quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Use embeddings to compute semantic similarity</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    input_embedding </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> get_embedding(input_text)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    output_embedding </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> get_embedding(output_text)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    similarity </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cosine_similarity(input_embedding, output_embedding)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> min</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(similarity </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1.0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Scale to 0-1</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#output-quality-monitoring\",\"isPage\":false,\"text\":\"\\ndef quality_check_response(input_text, output_text, model_type):\\n    &quot;&quot;&quot;\\n    Perform automated quality checks on model output\\n    &quot;&quot;&quot;\\n    checks = {\\n        &#x27;length_appropriate&#x27;: check_response_length(input_text, output_text),\\n        &#x27;relevance&#x27;: check_relevance(input_text, output_text),\\n        &#x27;coherence&#x27;: check_coherence(output_text),\\n        &#x27;safety&#x27;: check_content_safety(output_text),\\n        &#x27;language_quality&#x27;: check_language_quality(output_text)\\n    }\\n    \\n    # Calculate overall quality score\\n    quality_score = sum(checks.values()) / len(checks)\\n    \\n    return {\\n        &#x27;quality_score&#x27;: quality_score,\\n        &#x27;checks&#x27;: checks,\\n        &#x27;timestamp&#x27;: time.time()\\n    }\\n \\ndef check_response_length(input_text, output_text):\\n    &quot;&quot;&quot;Check if response length is appropriate&quot;&quot;&quot;\\n    input_length = len(input_text.split())\\n    output_length = len(output_text.split())\\n    \\n    # Response should be proportional to input complexity\\n    expected_ratio = min(max(input_length / 10, 1), 10)\\n    actual_ratio = output_length / max(input_length, 1)\\n    \\n    return 1.0 if 0.5 &lt;= actual_ratio / expected_ratio &lt;= 2.0 else 0.5\\n \\ndef check_relevance(input_text, output_text):\\n    &quot;&quot;&quot;Check if response is relevant to input&quot;&quot;&quot;\\n    # Use embeddings to compute semantic similarity\\n    input_embedding = get_embedding(input_text)\\n    output_embedding = get_embedding(output_text)\\n    \\n    similarity = cosine_similarity(input_embedding, output_embedding)\\n    return min(similarity * 2, 1.0)  # Scale to 0-1\\n\",\"title\":\"Output Quality Monitoring\",\"titles\":[\"Performance Monitoring\",\"Quality Monitoring\",\"Automated Quality Checks\"]},{\"href\":\"/provider-guide/monitoring#troubleshooting\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#troubleshooting\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Troubleshooting\",\"titles\":[\"Performance Monitoring\"]},{\"href\":\"/provider-guide/monitoring#performance-issues\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#performance-issues\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Performance Issues\",\"titles\":[\"Performance Monitoring\",\"Troubleshooting\"]},{\"href\":\"/provider-guide/monitoring#high-latency-diagnosis\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> diagnose_latency_issues</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">():</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    Diagnose potential causes of high latency</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    diagnostics </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Check system resources</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    diagnostics[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;cpu_usage&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> psutil.cpu_percent(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">interval</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    diagnostics[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;memory_usage&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> psutil.virtual_memory().percent</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    diagnostics[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;gpu_usage&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> get_gpu_utilization()  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Custom function</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Check model loading</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    diagnostics[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;model_loaded&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> is_model_loaded()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    diagnostics[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;model_size&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> get_model_size()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Check network</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    diagnostics[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;network_latency&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ping_external_service()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Check recent errors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    diagnostics[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;recent_errors&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> get_recent_error_count(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">minutes</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">10</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Generate recommendations</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    recommendations </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> []</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> diagnostics[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;cpu_usage&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 90</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        recommendations.append(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;High CPU usage - consider scaling horizontally&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> diagnostics[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;memory_usage&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 90</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        recommendations.append(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;High memory usage - check for memory leaks&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> diagnostics[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;gpu_usage&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 95</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        recommendations.append(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;GPU at capacity - add more GPU instances&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> diagnostics[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;recent_errors&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 10</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        recommendations.append(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;High error rate - check logs for issues&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;diagnostics&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: diagnostics,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;recommendations&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: recommendations</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#high-latency-diagnosis\",\"isPage\":false,\"text\":\"\\ndef diagnose_latency_issues():\\n    &quot;&quot;&quot;\\n    Diagnose potential causes of high latency\\n    &quot;&quot;&quot;\\n    diagnostics = {}\\n    \\n    # Check system resources\\n    diagnostics[&#x27;cpu_usage&#x27;] = psutil.cpu_percent(interval=1)\\n    diagnostics[&#x27;memory_usage&#x27;] = psutil.virtual_memory().percent\\n    diagnostics[&#x27;gpu_usage&#x27;] = get_gpu_utilization()  # Custom function\\n    \\n    # Check model loading\\n    diagnostics[&#x27;model_loaded&#x27;] = is_model_loaded()\\n    diagnostics[&#x27;model_size&#x27;] = get_model_size()\\n    \\n    # Check network\\n    diagnostics[&#x27;network_latency&#x27;] = ping_external_service()\\n    \\n    # Check recent errors\\n    diagnostics[&#x27;recent_errors&#x27;] = get_recent_error_count(minutes=10)\\n    \\n    # Generate recommendations\\n    recommendations = []\\n    \\n    if diagnostics[&#x27;cpu_usage&#x27;] &gt; 90:\\n        recommendations.append(&quot;High CPU usage - consider scaling horizontally&quot;)\\n    \\n    if diagnostics[&#x27;memory_usage&#x27;] &gt; 90:\\n        recommendations.append(&quot;High memory usage - check for memory leaks&quot;)\\n    \\n    if diagnostics[&#x27;gpu_usage&#x27;] &gt; 95:\\n        recommendations.append(&quot;GPU at capacity - add more GPU instances&quot;)\\n    \\n    if diagnostics[&#x27;recent_errors&#x27;] &gt; 10:\\n        recommendations.append(&quot;High error rate - check logs for issues&quot;)\\n    \\n    return {\\n        &#x27;diagnostics&#x27;: diagnostics,\\n        &#x27;recommendations&#x27;: recommendations\\n    }\\n\",\"title\":\"High Latency Diagnosis\",\"titles\":[\"Performance Monitoring\",\"Troubleshooting\",\"Performance Issues\"]},{\"href\":\"/provider-guide/monitoring#error-rate-analysis\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> analyze_error_patterns</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(hours</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">24</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    Analyze error patterns to identify root causes</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    errors </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> get_recent_errors(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">hours</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">hours)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Group by error type</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    error_types </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> error </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> errors:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        error_type </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> error[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;type&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> error_type </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">not</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> error_types:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            error_types[error_type] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> []</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        error_types[error_type].append(error)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    # Analyze patterns</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    analysis </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> error_type, error_list </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> error_types.items():</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        analysis[error_type] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;count&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(error_list),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;rate&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">len</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(error_list) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">/</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> hours,  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># errors per hour</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;recent_spike&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: check_error_spike(error_list),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">            &#x27;common_causes&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: identify_common_causes(error_list)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> analysis</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#error-rate-analysis\",\"isPage\":false,\"text\":\"\\ndef analyze_error_patterns(hours=24):\\n    &quot;&quot;&quot;\\n    Analyze error patterns to identify root causes\\n    &quot;&quot;&quot;\\n    errors = get_recent_errors(hours=hours)\\n    \\n    # Group by error type\\n    error_types = {}\\n    for error in errors:\\n        error_type = error[&#x27;type&#x27;]\\n        if error_type not in error_types:\\n            error_types[error_type] = []\\n        error_types[error_type].append(error)\\n    \\n    # Analyze patterns\\n    analysis = {}\\n    for error_type, error_list in error_types.items():\\n        analysis[error_type] = {\\n            &#x27;count&#x27;: len(error_list),\\n            &#x27;rate&#x27;: len(error_list) / hours,  # errors per hour\\n            &#x27;recent_spike&#x27;: check_error_spike(error_list),\\n            &#x27;common_causes&#x27;: identify_common_causes(error_list)\\n        }\\n    \\n    return analysis\\n\",\"title\":\"Error Rate Analysis\",\"titles\":[\"Performance Monitoring\",\"Troubleshooting\",\"Performance Issues\"]},{\"href\":\"/provider-guide/monitoring#monitoring-issues\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#monitoring-issues\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Monitoring Issues\",\"titles\":[\"Performance Monitoring\",\"Troubleshooting\"]},{\"href\":\"/provider-guide/monitoring#missing-metrics\",\"html\":\"\\n<p>Check if monitoring is properly configured:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> verify_monitoring_setup</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">():</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    Verify that monitoring is properly configured</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;&quot;&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    checks </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;prometheus_endpoint&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: check_endpoint_accessible(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;/metrics&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;health_endpoints&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: check_health_endpoints(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;log_collection&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: check_log_forwarding(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &#x27;alert_channels&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: test_alert_channels()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    issues </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [check </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> check, status </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> checks.items() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">if</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> not</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> status]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> issues:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Monitoring issues found: </span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">issues</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> False</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Monitoring setup is healthy&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> True</span></span></code></pre>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#missing-metrics\",\"isPage\":false,\"text\":\"\\nCheck if monitoring is properly configured:\\ndef verify_monitoring_setup():\\n    &quot;&quot;&quot;\\n    Verify that monitoring is properly configured\\n    &quot;&quot;&quot;\\n    checks = {\\n        &#x27;prometheus_endpoint&#x27;: check_endpoint_accessible(&#x27;/metrics&#x27;),\\n        &#x27;health_endpoints&#x27;: check_health_endpoints(),\\n        &#x27;log_collection&#x27;: check_log_forwarding(),\\n        &#x27;alert_channels&#x27;: test_alert_channels()\\n    }\\n    \\n    issues = [check for check, status in checks.items() if not status]\\n    \\n    if issues:\\n        print(f&quot;Monitoring issues found: {issues}&quot;)\\n        return False\\n    \\n    print(&quot;Monitoring setup is healthy&quot;)\\n    return True\\n\",\"title\":\"Missing Metrics\",\"titles\":[\"Performance Monitoring\",\"Troubleshooting\",\"Monitoring Issues\"]},{\"href\":\"/provider-guide/monitoring#support-and-resources\",\"html\":\"\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#support-and-resources\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Support and Resources\",\"titles\":[\"Performance Monitoring\"]},{\"href\":\"/provider-guide/monitoring#monitoring-support\",\"html\":\"\\n<ul>\\n<li><strong>Documentation</strong>: Comprehensive monitoring guides</li>\\n<li><strong>Dashboard training</strong>: Video tutorials for dashboard usage</li>\\n<li><strong>API examples</strong>: Sample code for metrics integration</li>\\n<li><strong>Best practices</strong>: Performance optimization guides</li>\\n</ul>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#monitoring-support\",\"isPage\":false,\"text\":\"\\n\\nDocumentation: Comprehensive monitoring guides\\nDashboard training: Video tutorials for dashboard usage\\nAPI examples: Sample code for metrics integration\\nBest practices: Performance optimization guides\\n\\n\",\"title\":\"Monitoring Support\",\"titles\":[\"Performance Monitoring\",\"Support and Resources\"]},{\"href\":\"/provider-guide/monitoring#contact-information\",\"html\":\"\\n<ul>\\n<li><strong>Monitoring support</strong>: <a href=\\\"mailto:monitoring@aimo.network\\\">monitoring@aimo.network</a></li>\\n<li><strong>Performance optimization</strong>: <a href=\\\"mailto:performance@aimo.network\\\">performance@aimo.network</a></li>\\n<li><strong>Technical assistance</strong>: <a href=\\\"mailto:providers-tech@aimo.network\\\">providers-tech@aimo.network</a></li>\\n<li><strong>Emergency response</strong>: <a href=\\\"mailto:urgent@aimo.network\\\">urgent@aimo.network</a></li>\\n</ul>\\n\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#contact-information\",\"isPage\":false,\"text\":\"\\n\\nMonitoring support: monitoring@aimo.network\\nPerformance optimization: performance@aimo.network\\nTechnical assistance: providers-tech@aimo.network\\nEmergency response: urgent@aimo.network\\n\\n\",\"title\":\"Contact Information\",\"titles\":[\"Performance Monitoring\",\"Support and Resources\"]},{\"href\":\"/provider-guide/monitoring#next-steps\",\"html\":\"\\n<p>To optimize your monitoring setup:</p>\\n<ol>\\n<li><strong><a href=\\\"/provider-guide/best-practices\\\">Implement best practices</a></strong> for optimal performance</li>\\n<li><strong><a href=\\\"/provider-guide/pricing\\\">Review pricing strategy</a></strong> based on performance data</li>\\n<li><strong><a href=\\\"https://discord.gg/aimo-providers\\\">Join the provider community</a></strong> for monitoring tips</li>\\n</ol>\\n<p>Need help with monitoring? Contact our team at <a href=\\\"mailto:monitoring@aimo.network\\\">monitoring@aimo.network</a></p>\",\"id\":\"docs/pages/provider-guide/monitoring.mdx#next-steps\",\"isPage\":false,\"text\":\"\\nTo optimize your monitoring setup:\\n\\nImplement best practices for optimal performance\\nReview pricing strategy based on performance data\\nJoin the provider community for monitoring tips\\n\\nNeed help with monitoring? Contact our team at monitoring@aimo.network\",\"title\":\"Next Steps\",\"titles\":[\"Performance Monitoring\"]}]}}"
