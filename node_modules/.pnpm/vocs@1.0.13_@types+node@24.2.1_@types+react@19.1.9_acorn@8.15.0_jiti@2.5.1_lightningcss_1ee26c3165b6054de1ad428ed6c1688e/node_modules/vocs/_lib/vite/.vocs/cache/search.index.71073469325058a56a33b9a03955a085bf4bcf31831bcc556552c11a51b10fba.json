"{\"value\":{\"mdx\":\"# Making Requests\\n\\nLearn how to make API requests to AiMo Network and handle responses effectively.\\n\\n## API Basics\\n\\n### Base URL\\n\\nAll API requests should be made to:\\n\\n```\\nhttps://devnet.aimo.network/api/v1\\n```\\n\\n### Authentication\\n\\nInclude your API key in the Authorization header:\\n\\n```bash\\nAuthorization: Bearer YOUR_API_KEY\\n```\\n\\n### Request Format\\n\\nAiMo Network uses JSON for all request and response bodies:\\n\\n```bash\\nContent-Type: application/json\\n```\\n\\n## Common Request Patterns\\n\\n### Chat Completions\\n\\nMost language models support the OpenAI-compatible chat completion format:\\n\\n```bash\\ncurl -X POST \\\"https://devnet.aimo.network/api/v1/chat/completions\\\" \\\\\\n  -H \\\"Authorization: Bearer aimo-sk-dev-[your-api-key]\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\n    \\\"model\\\": \\\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo\\\",\\n    \\\"messages\\\": [\\n      {\\\"role\\\": \\\"system\\\", \\\"content\\\": \\\"You are a helpful assistant.\\\"},\\n      {\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Explain machine learning in simple terms.\\\"}\\n    ],\\n    \\\"max_tokens\\\": 150,\\n    \\\"temperature\\\": 0.7\\n  }'\\n```\\n\\n#### Python Example\\n\\n```python\\nimport requests\\nimport os\\n\\nurl = \\\"https://devnet.aimo.network/api/v1/chat/completions\\\"\\nheaders = {\\n    \\\"Authorization\\\": f\\\"Bearer {os.getenv('AIMO_API_KEY')}\\\",\\n    \\\"Content-Type\\\": \\\"application/json\\\"\\n}\\n\\ndata = {\\n    \\\"model\\\": \\\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo\\\",\\n    \\\"messages\\\": [\\n        {\\\"role\\\": \\\"system\\\", \\\"content\\\": \\\"You are a helpful assistant.\\\"},\\n        {\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Explain machine learning in simple terms.\\\"}\\n    ],\\n    \\\"max_tokens\\\": 150,\\n    \\\"temperature\\\": 0.7\\n}\\n\\nresponse = requests.post(url, headers=headers, json=data)\\nprint(response.json())\\n```\\n\\n#### JavaScript Example\\n\\n```javascript\\nconst response = await fetch('https://devnet.aimo.network/api/v1/chat/completions', {\\n  method: 'POST',\\n  headers: {\\n    'Authorization': `Bearer ${process.env.AIMO_API_KEY}`,\\n    'Content-Type': 'application/json'\\n  },\\n  body: JSON.stringify({\\n    model: '9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo',\\n    messages: [\\n      { role: 'system', content: 'You are a helpful assistant.' },\\n      { role: 'user', content: 'Explain machine learning in simple terms.' }\\n    ],\\n    max_tokens: 150,\\n    temperature: 0.7\\n  })\\n});\\n\\nconst result = await response.json();\\nconsole.log(result.choices[0].message.content);\\n```\\n\\n### Model Format\\n\\nAiMo Network uses a unique model identifier format:\\n\\n```\\nprovider_pubkey:model_name\\n```\\n\\n**Example:** `9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo`\\n\\nWhere:\\n- `provider_pubkey` is the Solana public key of the model provider\\n- `model_name` is the specific model offered by that provider\\n\\n### Image Generation\\n\\nGenerate images from text descriptions:\\n\\n```bash\\ncurl -X POST https://api.aimo.network/v1/images/generations \\\\\\n  -H \\\"Authorization: Bearer YOUR_API_KEY\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\n    \\\"model\\\": \\\"dall-e-3\\\",\\n    \\\"prompt\\\": \\\"A serene landscape with mountains and a lake at sunset\\\",\\n    \\\"size\\\": \\\"1024x1024\\\",\\n    \\\"quality\\\": \\\"standard\\\",\\n    \\\"n\\\": 1\\n  }'\\n```\\n\\n### Embeddings\\n\\nCreate vector embeddings for text:\\n\\n```bash\\ncurl -X POST https://api.aimo.network/v1/embeddings \\\\\\n  -H \\\"Authorization: Bearer YOUR_API_KEY\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\n    \\\"model\\\": \\\"text-embedding-ada-002\\\",\\n    \\\"input\\\": \\\"The quick brown fox jumps over the lazy dog\\\"\\n  }'\\n```\\n\\n## Request Parameters\\n\\n### Common Parameters\\n\\n#### Model Selection\\n- **model**: The ID of the model to use (required)\\n- **provider**: Specific provider (optional, for multi-provider models)\\n\\n#### Generation Control\\n- **max_tokens**: Maximum number of tokens to generate\\n- **temperature**: Controls randomness (0.0 to 1.0)\\n- **top_p**: Nucleus sampling parameter\\n- **frequency_penalty**: Reduces repetition\\n- **presence_penalty**: Encourages topic diversity\\n\\n#### Quality Control\\n- **n**: Number of generations to return\\n- **stream**: Enable streaming responses\\n- **stop**: Stop sequences to end generation\\n\\n### Model-Specific Parameters\\n\\n#### Language Models\\n```json\\n{\\n  \\\"model\\\": \\\"gpt-4\\\",\\n  \\\"messages\\\": [...],\\n  \\\"max_tokens\\\": 150,\\n  \\\"temperature\\\": 0.7,\\n  \\\"top_p\\\": 1.0,\\n  \\\"frequency_penalty\\\": 0.0,\\n  \\\"presence_penalty\\\": 0.0,\\n  \\\"stop\\\": [\\\"\\\\n\\\", \\\"Human:\\\", \\\"AI:\\\"]\\n}\\n```\\n\\n#### Image Generation\\n```json\\n{\\n  \\\"model\\\": \\\"dall-e-3\\\",\\n  \\\"prompt\\\": \\\"A beautiful sunset\\\",\\n  \\\"size\\\": \\\"1024x1024\\\",\\n  \\\"quality\\\": \\\"hd\\\",\\n  \\\"style\\\": \\\"vivid\\\",\\n  \\\"n\\\": 1,\\n  \\\"response_format\\\": \\\"url\\\"\\n}\\n```\\n\\n#### Embeddings\\n```json\\n{\\n  \\\"model\\\": \\\"text-embedding-ada-002\\\",\\n  \\\"input\\\": [\\\"text1\\\", \\\"text2\\\", \\\"text3\\\"],\\n  \\\"encoding_format\\\": \\\"float\\\"\\n}\\n```\\n\\n## Response Handling\\n\\n### Response Format\\n\\nAiMo Network returns OpenAI-compatible responses with additional metadata:\\n\\n```json\\n{\\n  \\\"id\\\": \\\"chatcmpl-123\\\",\\n  \\\"object\\\": \\\"chat.completion\\\",\\n  \\\"created\\\": 1677652288,\\n  \\\"choices\\\": [\\n    {\\n      \\\"index\\\": 0,\\n      \\\"message\\\": {\\n        \\\"role\\\": \\\"assistant\\\",\\n        \\\"content\\\": \\\"Machine learning is a type of artificial intelligence...\\\"\\n      },\\n      \\\"finish_reason\\\": \\\"stop\\\"\\n    }\\n  ],\\n  \\\"usage\\\": {\\n    \\\"prompt_tokens\\\": 25,\\n    \\\"completion_tokens\\\": 125,\\n    \\\"total_tokens\\\": 150\\n  }\\n}\\n```\\n\\n### Cost Information\\n\\nEach response includes cost details for transparency:\\n\\n```json\\n{\\n  \\\"id\\\": \\\"chatcmpl-123\\\",\\n  \\\"object\\\": \\\"chat.completion\\\",\\n  \\\"created\\\": 1677652288,\\n  \\\"choices\\\": [...],\\n  \\\"usage\\\": {\\n    \\\"prompt_tokens\\\": 25,\\n    \\\"completion_tokens\\\": 125,\\n    \\\"total_tokens\\\": 150\\n  },\\n  \\\"meta\\\": {\\n    \\\"cost\\\": 0.000375,\\n    \\\"provider\\\": \\\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\\\"\\n  }\\n}\\n```\\n\\n### Image Generation Response\\n\\n```json\\n{\\n  \\\"success\\\": true,\\n  \\\"data\\\": {\\n    \\\"created\\\": 1677652288,\\n    \\\"data\\\": [\\n      {\\n        \\\"url\\\": \\\"https://images.aimo.network/generated/img_123.png\\\",\\n        \\\"revised_prompt\\\": \\\"A serene landscape with mountains...\\\"\\n      }\\n    ]\\n  },\\n  \\\"meta\\\": {\\n    \\\"request_id\\\": \\\"req_def456\\\",\\n    \\\"model\\\": \\\"dall-e-3\\\",\\n    \\\"provider\\\": \\\"openai\\\",\\n    \\\"latency_ms\\\": 15000,\\n    \\\"cost\\\": 0.040\\n  }\\n}\\n```\\n\\n## Streaming Responses\\n\\n### Enable Streaming\\n\\nFor real-time applications, enable streaming to receive partial responses:\\n\\n```bash\\ncurl -X POST \\\"https://devnet.aimo.network/api/v1/chat/completions\\\" \\\\\\n  -H \\\"Authorization: Bearer aimo-sk-dev-[your-api-key]\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\n    \\\"model\\\": \\\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo\\\",\\n    \\\"messages\\\": [{\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Tell me a story\\\"}],\\n    \\\"stream\\\": true\\n  }'\\n```\\n\\n### Handle Streaming in Python\\n\\n```python\\nimport requests\\nimport json\\n\\nurl = \\\"https://devnet.aimo.network/api/v1/chat/completions\\\"\\nheaders = {\\n    \\\"Authorization\\\": f\\\"Bearer {os.getenv('AIMO_API_KEY')}\\\",\\n    \\\"Content-Type\\\": \\\"application/json\\\"\\n}\\n\\ndata = {\\n    \\\"model\\\": \\\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo\\\",\\n    \\\"messages\\\": [{\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Tell me a story\\\"}],\\n    \\\"stream\\\": True\\n}\\n\\nresponse = requests.post(url, headers=headers, json=data, stream=True)\\n\\nfor line in response.iter_lines():\\n    if line:\\n        line = line.decode('utf-8')\\n        if line.startswith('data: '):\\n            if line == 'data: [DONE]':\\n                break\\n            try:\\n                chunk = json.loads(line[6:])\\n                content = chunk.get('choices', [{}])[0].get('delta', {}).get('content')\\n                if content:\\n                    print(content, end='', flush=True)\\n            except json.JSONDecodeError:\\n                continue\\n```\\n\\n### Handle Streaming in JavaScript\\n\\n```javascript\\nconst response = await fetch('https://devnet.aimo.network/api/v1/chat/completions', {\\n  method: 'POST',\\n  headers: {\\n    'Authorization': `Bearer ${process.env.AIMO_API_KEY}`,\\n    'Content-Type': 'application/json'\\n  },\\n  body: JSON.stringify({\\n    model: '9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo',\\n    messages: [{ role: 'user', content: 'Tell me a story' }],\\n    stream: true\\n  })\\n});\\n\\nconst reader = response.body.getReader();\\nconst decoder = new TextDecoder();\\n\\nwhile (true) {\\n  const { done, value } = await reader.read();\\n  if (done) break;\\n  \\n  const chunk = decoder.decode(value);\\n  const lines = chunk.split('\\\\n');\\n  \\n  for (const line of lines) {\\n    if (line.startsWith('data: ')) {\\n      if (line === 'data: [DONE]') return;\\n      try {\\n        const data = JSON.parse(line.slice(6));\\n        const content = data.choices?.[0]?.delta?.content;\\n        if (content) {\\n          process.stdout.write(content);\\n        }\\n      } catch (e) {\\n        // Skip invalid JSON\\n      }\\n    }\\n  }\\n}\\n```\\n\\n## Error Handling\\n\\n### Error Response Format\\n\\n```json\\n{\\n  \\\"error\\\": {\\n    \\\"message\\\": \\\"Insufficient balance for estimated cost: 0.001 tokens\\\",\\n    \\\"type\\\": \\\"insufficient_balance\\\",\\n    \\\"code\\\": 402\\n  }\\n}\\n```\\n\\n### Common Error Codes\\n\\n| Code | Description | Action |\\n|------|-------------|--------|\\n| `400` | Bad Request | Check request format |\\n| `401` | Unauthorized | Verify API key |\\n| `402` | Payment Required | Fund escrow account |\\n| `404` | Not Found | Check provider/model format |\\n| `422` | Unprocessable Entity | Check model parameters |\\n| `424` | Failed Dependency | Set up escrow account |\\n| `429` | Too Many Requests | Implement backoff |\\n| `500` | Internal Server Error | Retry request |\\n\\n### Implementing Retry Logic\\n\\n#### Python Example\\n\\n```python\\nimport time\\nimport random\\nimport requests\\nimport os\\n\\ndef make_request_with_retry(messages, max_retries=3):\\n    url = \\\"https://devnet.aimo.network/api/v1/chat/completions\\\"\\n    headers = {\\n        \\\"Authorization\\\": f\\\"Bearer {os.getenv('AIMO_API_KEY')}\\\",\\n        \\\"Content-Type\\\": \\\"application/json\\\"\\n    }\\n    \\n    for attempt in range(max_retries):\\n        try:\\n            response = requests.post(url, headers=headers, json={\\n                \\\"model\\\": \\\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo\\\",\\n                \\\"messages\\\": messages\\n            })\\n            \\n            if response.status_code == 200:\\n                return response.json()\\n            elif response.status_code == 429:  # Rate limit\\n                wait_time = (2 ** attempt) + random.uniform(0, 1)\\n                time.sleep(wait_time)\\n                continue\\n            elif response.status_code >= 500:  # Server error\\n                if attempt < max_retries - 1:\\n                    time.sleep(1)\\n                    continue\\n            else:\\n                raise Exception(f\\\"Request failed: {response.json()}\\\")\\n        except Exception as e:\\n            if attempt == max_retries - 1:\\n                raise e\\n            time.sleep(1)\\n    \\n    raise Exception(\\\"Max retries exceeded\\\")\\n```\\n\\n#### JavaScript Example\\n\\n```javascript\\nasync function makeRequestWithRetry(messages, maxRetries = 3) {\\n  for (let attempt = 0; attempt < maxRetries; attempt++) {\\n    try {\\n      const response = await client.chat.completions.create({\\n        model: 'gpt-4',\\n        messages: messages\\n      });\\n      return response;\\n    } catch (error) {\\n      if (error.status === 429) { // Rate limit\\n        const waitTime = (2 ** attempt) * 1000 + Math.random() * 1000;\\n        await new Promise(resolve => setTimeout(resolve, waitTime));\\n        continue;\\n      } else if (error.status >= 500) { // Server error\\n        if (attempt < maxRetries - 1) {\\n          await new Promise(resolve => setTimeout(resolve, 1000));\\n          continue;\\n        }\\n      }\\n      throw error;\\n    }\\n  }\\n  throw new Error('Max retries exceeded');\\n}\\n```\\n\\n## Best Practices\\n\\n### Request Optimization\\n\\n1. **Batch requests** when possible to reduce latency\\n2. **Use appropriate timeouts** for your application\\n3. **Implement caching** for repeated requests\\n4. **Monitor token usage** to control costs\\n\\n### Performance Tips\\n\\n1. **Choose the right model** for your use case\\n2. **Optimize prompt length** to reduce costs\\n3. **Use streaming** for better user experience\\n4. **Implement proper error handling** and retries\\n\\n### Security Considerations\\n\\n1. **Never expose API keys** in client-side code\\n2. **Use environment variables** for API key storage\\n3. **Implement request validation** on your backend\\n4. **Monitor usage** for unusual activity\\n\\n## Next Steps\\n\\nNow that you know how to make requests:\\n\\n1. **[Set up authentication](/user-guide/authentication)** with API keys and Solana wallets\\n2. **[Discover available models](/user-guide/model-discovery)** and their capabilities\\n3. **[Manage billing](/user-guide/billing)** to fund your escrow account and track costs\\n\\n## Additional Resources\\n\\n- **Model Format**: Always use `provider_pubkey:model_name`\\n- **Base URL**: `https://devnet.aimo.network/api/v1`\\n- **OpenAI Compatibility**: Standard OpenAI parameters are supported\\n\\nNeed help with a specific request pattern? Contact your AiMo Network node operator or the community.\\n\",\"document\":[{\"href\":\"/user-guide/making-requests#making-requests\",\"html\":\"</header>\\n<p>Learn how to make API requests to AiMo Network and handle responses effectively.</p>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#making-requests\",\"isPage\":true,\"text\":\"\\nLearn how to make API requests to AiMo Network and handle responses effectively.\\n\",\"title\":\"Making Requests\",\"titles\":[]},{\"href\":\"/user-guide/making-requests#api-basics\",\"html\":\"\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#api-basics\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"API Basics\",\"titles\":[\"Making Requests\"]},{\"href\":\"/user-guide/making-requests#base-url\",\"html\":\"\\n<p>All API requests should be made to:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">https://devnet.aimo.network/api/v1</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#base-url\",\"isPage\":false,\"text\":\"\\nAll API requests should be made to:\\nhttps://devnet.aimo.network/api/v1\\n\",\"title\":\"Base URL\",\"titles\":[\"Making Requests\",\"API Basics\"]},{\"href\":\"/user-guide/making-requests#authentication\",\"html\":\"\\n<p>Include your API key in the Authorization header:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">Authorization:</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> Bearer</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> YOUR_API_KEY</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#authentication\",\"isPage\":false,\"text\":\"\\nInclude your API key in the Authorization header:\\nAuthorization: Bearer YOUR_API_KEY\\n\",\"title\":\"Authentication\",\"titles\":[\"Making Requests\",\"API Basics\"]},{\"href\":\"/user-guide/making-requests#request-format\",\"html\":\"\\n<p>AiMo Network uses JSON for all request and response bodies:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">Content-Type:</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> application/json</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#request-format\",\"isPage\":false,\"text\":\"\\nAiMo Network uses JSON for all request and response bodies:\\nContent-Type: application/json\\n\",\"title\":\"Request Format\",\"titles\":[\"Making Requests\",\"API Basics\"]},{\"href\":\"/user-guide/making-requests#common-request-patterns\",\"html\":\"\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#common-request-patterns\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Common Request Patterns\",\"titles\":[\"Making Requests\"]},{\"href\":\"/user-guide/making-requests#chat-completions\",\"html\":\"\\n<p>Most language models support the OpenAI-compatible chat completion format:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">curl</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> -X</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> POST</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;https://devnet.aimo.network/api/v1/chat/completions&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -H</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;Authorization: Bearer aimo-sk-dev-[your-api-key]&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -H</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;Content-Type: application/json&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -d</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;model&quot;: &quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&quot;,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;messages&quot;: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">      {&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a helpful assistant.&quot;},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">      {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Explain machine learning in simple terms.&quot;}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;max_tokens&quot;: 150,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;temperature&quot;: 0.7</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">  }&#x27;</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#chat-completions\",\"isPage\":false,\"text\":\"\\nMost language models support the OpenAI-compatible chat completion format:\\ncurl -X POST &quot;https://devnet.aimo.network/api/v1/chat/completions&quot; \\\\\\n  -H &quot;Authorization: Bearer aimo-sk-dev-[your-api-key]&quot; \\\\\\n  -H &quot;Content-Type: application/json&quot; \\\\\\n  -d &#x27;{\\n    &quot;model&quot;: &quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&quot;,\\n    &quot;messages&quot;: [\\n      {&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a helpful assistant.&quot;},\\n      {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Explain machine learning in simple terms.&quot;}\\n    ],\\n    &quot;max_tokens&quot;: 150,\\n    &quot;temperature&quot;: 0.7\\n  }&#x27;\\n\",\"title\":\"Chat Completions\",\"titles\":[\"Making Requests\",\"Common Request Patterns\"]},{\"href\":\"/user-guide/making-requests#python-example\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> os</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">url </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;https://devnet.aimo.network/api/v1/chat/completions&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">headers </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;Authorization&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Bearer </span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">os.getenv(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;AIMO_API_KEY&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;Content-Type&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;application/json&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">data </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;model&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;messages&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        {</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;role&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;system&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;content&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;You are a helpful assistant.&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        {</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;role&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;user&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;content&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Explain machine learning in simple terms.&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;max_tokens&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">150</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;temperature&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0.7</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests.post(url, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">headers</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">headers, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">json</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">data)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.json())</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#python-example\",\"isPage\":false,\"text\":\"\\nimport requests\\nimport os\\n \\nurl = &quot;https://devnet.aimo.network/api/v1/chat/completions&quot;\\nheaders = {\\n    &quot;Authorization&quot;: f&quot;Bearer {os.getenv(&#x27;AIMO_API_KEY&#x27;)}&quot;,\\n    &quot;Content-Type&quot;: &quot;application/json&quot;\\n}\\n \\ndata = {\\n    &quot;model&quot;: &quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&quot;,\\n    &quot;messages&quot;: [\\n        {&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a helpful assistant.&quot;},\\n        {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Explain machine learning in simple terms.&quot;}\\n    ],\\n    &quot;max_tokens&quot;: 150,\\n    &quot;temperature&quot;: 0.7\\n}\\n \\nresponse = requests.post(url, headers=headers, json=data)\\nprint(response.json())\\n\",\"title\":\"Python Example\",\"titles\":[\"Making Requests\",\"Common Request Patterns\",\"Chat Completions\"]},{\"href\":\"/user-guide/making-requests#javascript-example\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> response</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> fetch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://devnet.aimo.network/api/v1/chat/completions&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;POST&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  headers: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &#x27;Authorization&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">`Bearer ${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">process</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">env</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">AIMO_API_KEY</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &#x27;Content-Type&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;application/json&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  body: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">JSON</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">stringify</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    model: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    messages: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      { role: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;system&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, content: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;You are a helpful assistant.&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      { role: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;user&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, content: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Explain machine learning in simple terms.&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    max_tokens: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">150</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    temperature: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0.7</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> result</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">json</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(result.choices[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].message.content);</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#javascript-example\",\"isPage\":false,\"text\":\"\\nconst response = await fetch(&#x27;https://devnet.aimo.network/api/v1/chat/completions&#x27;, {\\n  method: &#x27;POST&#x27;,\\n  headers: {\\n    &#x27;Authorization&#x27;: `Bearer ${process.env.AIMO_API_KEY}`,\\n    &#x27;Content-Type&#x27;: &#x27;application/json&#x27;\\n  },\\n  body: JSON.stringify({\\n    model: &#x27;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&#x27;,\\n    messages: [\\n      { role: &#x27;system&#x27;, content: &#x27;You are a helpful assistant.&#x27; },\\n      { role: &#x27;user&#x27;, content: &#x27;Explain machine learning in simple terms.&#x27; }\\n    ],\\n    max_tokens: 150,\\n    temperature: 0.7\\n  })\\n});\\n \\nconst result = await response.json();\\nconsole.log(result.choices[0].message.content);\\n\",\"title\":\"JavaScript Example\",\"titles\":[\"Making Requests\",\"Common Request Patterns\",\"Chat Completions\"]},{\"href\":\"/user-guide/making-requests#model-format\",\"html\":\"\\n<p>AiMo Network uses a unique model identifier format:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">provider_pubkey:model_name</span></span></code></pre>\\n<p><strong>Example:</strong> <code>9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo</code></p>\\n<p>Where:</p>\\n<ul>\\n<li><code>provider_pubkey</code> is the Solana public key of the model provider</li>\\n<li><code>model_name</code> is the specific model offered by that provider</li>\\n</ul>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#model-format\",\"isPage\":false,\"text\":\"\\nAiMo Network uses a unique model identifier format:\\nprovider_pubkey:model_name\\nExample: 9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo\\nWhere:\\n\\nprovider_pubkey is the Solana public key of the model provider\\nmodel_name is the specific model offered by that provider\\n\\n\",\"title\":\"Model Format\",\"titles\":[\"Making Requests\",\"Common Request Patterns\"]},{\"href\":\"/user-guide/making-requests#image-generation\",\"html\":\"\\n<p>Generate images from text descriptions:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">curl</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> -X</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> POST</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> https://api.aimo.network/v1/images/generations</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -H</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;Authorization: Bearer YOUR_API_KEY&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -H</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;Content-Type: application/json&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -d</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;model&quot;: &quot;dall-e-3&quot;,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;prompt&quot;: &quot;A serene landscape with mountains and a lake at sunset&quot;,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;size&quot;: &quot;1024x1024&quot;,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;quality&quot;: &quot;standard&quot;,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;n&quot;: 1</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">  }&#x27;</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#image-generation\",\"isPage\":false,\"text\":\"\\nGenerate images from text descriptions:\\ncurl -X POST https://api.aimo.network/v1/images/generations \\\\\\n  -H &quot;Authorization: Bearer YOUR_API_KEY&quot; \\\\\\n  -H &quot;Content-Type: application/json&quot; \\\\\\n  -d &#x27;{\\n    &quot;model&quot;: &quot;dall-e-3&quot;,\\n    &quot;prompt&quot;: &quot;A serene landscape with mountains and a lake at sunset&quot;,\\n    &quot;size&quot;: &quot;1024x1024&quot;,\\n    &quot;quality&quot;: &quot;standard&quot;,\\n    &quot;n&quot;: 1\\n  }&#x27;\\n\",\"title\":\"Image Generation\",\"titles\":[\"Making Requests\",\"Common Request Patterns\"]},{\"href\":\"/user-guide/making-requests#embeddings\",\"html\":\"\\n<p>Create vector embeddings for text:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">curl</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> -X</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> POST</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> https://api.aimo.network/v1/embeddings</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -H</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;Authorization: Bearer YOUR_API_KEY&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -H</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;Content-Type: application/json&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -d</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;model&quot;: &quot;text-embedding-ada-002&quot;,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;input&quot;: &quot;The quick brown fox jumps over the lazy dog&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">  }&#x27;</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#embeddings\",\"isPage\":false,\"text\":\"\\nCreate vector embeddings for text:\\ncurl -X POST https://api.aimo.network/v1/embeddings \\\\\\n  -H &quot;Authorization: Bearer YOUR_API_KEY&quot; \\\\\\n  -H &quot;Content-Type: application/json&quot; \\\\\\n  -d &#x27;{\\n    &quot;model&quot;: &quot;text-embedding-ada-002&quot;,\\n    &quot;input&quot;: &quot;The quick brown fox jumps over the lazy dog&quot;\\n  }&#x27;\\n\",\"title\":\"Embeddings\",\"titles\":[\"Making Requests\",\"Common Request Patterns\"]},{\"href\":\"/user-guide/making-requests#request-parameters\",\"html\":\"\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#request-parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Request Parameters\",\"titles\":[\"Making Requests\"]},{\"href\":\"/user-guide/making-requests#common-parameters\",\"html\":\"\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#common-parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Common Parameters\",\"titles\":[\"Making Requests\",\"Request Parameters\"]},{\"href\":\"/user-guide/making-requests#model-selection\",\"html\":\"\\n<ul>\\n<li><strong>model</strong>: The ID of the model to use (required)</li>\\n<li><strong>provider</strong>: Specific provider (optional, for multi-provider models)</li>\\n</ul>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#model-selection\",\"isPage\":false,\"text\":\"\\n\\nmodel: The ID of the model to use (required)\\nprovider: Specific provider (optional, for multi-provider models)\\n\\n\",\"title\":\"Model Selection\",\"titles\":[\"Making Requests\",\"Request Parameters\",\"Common Parameters\"]},{\"href\":\"/user-guide/making-requests#generation-control\",\"html\":\"\\n<ul>\\n<li><strong>max_tokens</strong>: Maximum number of tokens to generate</li>\\n<li><strong>temperature</strong>: Controls randomness (0.0 to 1.0)</li>\\n<li><strong>top_p</strong>: Nucleus sampling parameter</li>\\n<li><strong>frequency_penalty</strong>: Reduces repetition</li>\\n<li><strong>presence_penalty</strong>: Encourages topic diversity</li>\\n</ul>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#generation-control\",\"isPage\":false,\"text\":\"\\n\\nmax_tokens: Maximum number of tokens to generate\\ntemperature: Controls randomness (0.0 to 1.0)\\ntop_p: Nucleus sampling parameter\\nfrequency_penalty: Reduces repetition\\npresence_penalty: Encourages topic diversity\\n\\n\",\"title\":\"Generation Control\",\"titles\":[\"Making Requests\",\"Request Parameters\",\"Common Parameters\"]},{\"href\":\"/user-guide/making-requests#quality-control\",\"html\":\"\\n<ul>\\n<li><strong>n</strong>: Number of generations to return</li>\\n<li><strong>stream</strong>: Enable streaming responses</li>\\n<li><strong>stop</strong>: Stop sequences to end generation</li>\\n</ul>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#quality-control\",\"isPage\":false,\"text\":\"\\n\\nn: Number of generations to return\\nstream: Enable streaming responses\\nstop: Stop sequences to end generation\\n\\n\",\"title\":\"Quality Control\",\"titles\":[\"Making Requests\",\"Request Parameters\",\"Common Parameters\"]},{\"href\":\"/user-guide/making-requests#model-specific-parameters\",\"html\":\"\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#model-specific-parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Model-Specific Parameters\",\"titles\":[\"Making Requests\",\"Request Parameters\"]},{\"href\":\"/user-guide/making-requests#language-models\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;model&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;gpt-4&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;messages&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [</span><span style=\\\"color:#B31D28;font-style:italic;--shiki-dark:#FF938A;--shiki-dark-font-style:italic\\\">...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;max_tokens&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">150</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;temperature&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0.7</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;top_p&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1.0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;frequency_penalty&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0.0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;presence_penalty&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0.0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;stop&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">\\\\n</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Human:&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;AI:&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#language-models\",\"isPage\":false,\"text\":\"\\n{\\n  &quot;model&quot;: &quot;gpt-4&quot;,\\n  &quot;messages&quot;: [...],\\n  &quot;max_tokens&quot;: 150,\\n  &quot;temperature&quot;: 0.7,\\n  &quot;top_p&quot;: 1.0,\\n  &quot;frequency_penalty&quot;: 0.0,\\n  &quot;presence_penalty&quot;: 0.0,\\n  &quot;stop&quot;: [&quot;\\\\n&quot;, &quot;Human:&quot;, &quot;AI:&quot;]\\n}\\n\",\"title\":\"Language Models\",\"titles\":[\"Making Requests\",\"Request Parameters\",\"Model-Specific Parameters\"]},{\"href\":\"/user-guide/making-requests#image-generation-1\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;model&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;dall-e-3&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;prompt&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;A beautiful sunset&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;size&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;1024x1024&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;quality&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;hd&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;style&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;vivid&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;n&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;response_format&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;url&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#image-generation-1\",\"isPage\":false,\"text\":\"\\n{\\n  &quot;model&quot;: &quot;dall-e-3&quot;,\\n  &quot;prompt&quot;: &quot;A beautiful sunset&quot;,\\n  &quot;size&quot;: &quot;1024x1024&quot;,\\n  &quot;quality&quot;: &quot;hd&quot;,\\n  &quot;style&quot;: &quot;vivid&quot;,\\n  &quot;n&quot;: 1,\\n  &quot;response_format&quot;: &quot;url&quot;\\n}\\n\",\"title\":\"Image Generation\",\"titles\":[\"Making Requests\",\"Request Parameters\",\"Model-Specific Parameters\"]},{\"href\":\"/user-guide/making-requests#embeddings-1\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;model&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;text-embedding-ada-002&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;input&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;text1&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;text2&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;text3&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;encoding_format&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;float&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#embeddings-1\",\"isPage\":false,\"text\":\"\\n{\\n  &quot;model&quot;: &quot;text-embedding-ada-002&quot;,\\n  &quot;input&quot;: [&quot;text1&quot;, &quot;text2&quot;, &quot;text3&quot;],\\n  &quot;encoding_format&quot;: &quot;float&quot;\\n}\\n\",\"title\":\"Embeddings\",\"titles\":[\"Making Requests\",\"Request Parameters\",\"Model-Specific Parameters\"]},{\"href\":\"/user-guide/making-requests#response-handling\",\"html\":\"\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#response-handling\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Response Handling\",\"titles\":[\"Making Requests\"]},{\"href\":\"/user-guide/making-requests#response-format\",\"html\":\"\\n<p>AiMo Network returns OpenAI-compatible responses with additional metadata:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;id&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;chatcmpl-123&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;object&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;chat.completion&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;created&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1677652288</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;choices&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">      &quot;index&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">      &quot;message&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">        &quot;role&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;assistant&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">        &quot;content&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Machine learning is a type of artificial intelligence...&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">      &quot;finish_reason&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;stop&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;usage&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;prompt_tokens&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">25</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;completion_tokens&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">125</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;total_tokens&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">150</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#response-format\",\"isPage\":false,\"text\":\"\\nAiMo Network returns OpenAI-compatible responses with additional metadata:\\n{\\n  &quot;id&quot;: &quot;chatcmpl-123&quot;,\\n  &quot;object&quot;: &quot;chat.completion&quot;,\\n  &quot;created&quot;: 1677652288,\\n  &quot;choices&quot;: [\\n    {\\n      &quot;index&quot;: 0,\\n      &quot;message&quot;: {\\n        &quot;role&quot;: &quot;assistant&quot;,\\n        &quot;content&quot;: &quot;Machine learning is a type of artificial intelligence...&quot;\\n      },\\n      &quot;finish_reason&quot;: &quot;stop&quot;\\n    }\\n  ],\\n  &quot;usage&quot;: {\\n    &quot;prompt_tokens&quot;: 25,\\n    &quot;completion_tokens&quot;: 125,\\n    &quot;total_tokens&quot;: 150\\n  }\\n}\\n\",\"title\":\"Response Format\",\"titles\":[\"Making Requests\",\"Response Handling\"]},{\"href\":\"/user-guide/making-requests#cost-information\",\"html\":\"\\n<p>Each response includes cost details for transparency:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;id&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;chatcmpl-123&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;object&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;chat.completion&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;created&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1677652288</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;choices&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [</span><span style=\\\"color:#B31D28;font-style:italic;--shiki-dark:#FF938A;--shiki-dark-font-style:italic\\\">...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;usage&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;prompt_tokens&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">25</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;completion_tokens&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">125</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;total_tokens&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">150</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;meta&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;cost&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0.000375</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;provider&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#cost-information\",\"isPage\":false,\"text\":\"\\nEach response includes cost details for transparency:\\n{\\n  &quot;id&quot;: &quot;chatcmpl-123&quot;,\\n  &quot;object&quot;: &quot;chat.completion&quot;,\\n  &quot;created&quot;: 1677652288,\\n  &quot;choices&quot;: [...],\\n  &quot;usage&quot;: {\\n    &quot;prompt_tokens&quot;: 25,\\n    &quot;completion_tokens&quot;: 125,\\n    &quot;total_tokens&quot;: 150\\n  },\\n  &quot;meta&quot;: {\\n    &quot;cost&quot;: 0.000375,\\n    &quot;provider&quot;: &quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM&quot;\\n  }\\n}\\n\",\"title\":\"Cost Information\",\"titles\":[\"Making Requests\",\"Response Handling\"]},{\"href\":\"/user-guide/making-requests#image-generation-response\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;success&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;data&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;created&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1677652288</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;data&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">        &quot;url&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;https://images.aimo.network/generated/img_123.png&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">        &quot;revised_prompt&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;A serene landscape with mountains...&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;meta&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;request_id&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;req_def456&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;model&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;dall-e-3&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;provider&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;openai&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;latency_ms&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">15000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;cost&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0.040</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#image-generation-response\",\"isPage\":false,\"text\":\"\\n{\\n  &quot;success&quot;: true,\\n  &quot;data&quot;: {\\n    &quot;created&quot;: 1677652288,\\n    &quot;data&quot;: [\\n      {\\n        &quot;url&quot;: &quot;https://images.aimo.network/generated/img_123.png&quot;,\\n        &quot;revised_prompt&quot;: &quot;A serene landscape with mountains...&quot;\\n      }\\n    ]\\n  },\\n  &quot;meta&quot;: {\\n    &quot;request_id&quot;: &quot;req_def456&quot;,\\n    &quot;model&quot;: &quot;dall-e-3&quot;,\\n    &quot;provider&quot;: &quot;openai&quot;,\\n    &quot;latency_ms&quot;: 15000,\\n    &quot;cost&quot;: 0.040\\n  }\\n}\\n\",\"title\":\"Image Generation Response\",\"titles\":[\"Making Requests\",\"Response Handling\"]},{\"href\":\"/user-guide/making-requests#streaming-responses\",\"html\":\"\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#streaming-responses\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Streaming Responses\",\"titles\":[\"Making Requests\"]},{\"href\":\"/user-guide/making-requests#enable-streaming\",\"html\":\"\\n<p>For real-time applications, enable streaming to receive partial responses:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">curl</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> -X</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> POST</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;https://devnet.aimo.network/api/v1/chat/completions&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -H</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;Authorization: Bearer aimo-sk-dev-[your-api-key]&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -H</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;Content-Type: application/json&quot;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\"> \\\\</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  -d</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;model&quot;: &quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&quot;,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Tell me a story&quot;}],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;stream&quot;: true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">  }&#x27;</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#enable-streaming\",\"isPage\":false,\"text\":\"\\nFor real-time applications, enable streaming to receive partial responses:\\ncurl -X POST &quot;https://devnet.aimo.network/api/v1/chat/completions&quot; \\\\\\n  -H &quot;Authorization: Bearer aimo-sk-dev-[your-api-key]&quot; \\\\\\n  -H &quot;Content-Type: application/json&quot; \\\\\\n  -d &#x27;{\\n    &quot;model&quot;: &quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&quot;,\\n    &quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Tell me a story&quot;}],\\n    &quot;stream&quot;: true\\n  }&#x27;\\n\",\"title\":\"Enable Streaming\",\"titles\":[\"Making Requests\",\"Streaming Responses\"]},{\"href\":\"/user-guide/making-requests#handle-streaming-in-python\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> json</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">url </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;https://devnet.aimo.network/api/v1/chat/completions&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">headers </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;Authorization&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Bearer </span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">os.getenv(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;AIMO_API_KEY&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;Content-Type&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;application/json&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">data </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;model&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;messages&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: [{</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;role&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;user&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;content&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Tell me a story&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;stream&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">True</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests.post(url, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">headers</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">headers, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">json</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">data, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">stream</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">True</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> line </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.iter_lines():</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> line:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        line </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> line.decode(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;utf-8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> line.startswith(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;data: &#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> line </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;data: [DONE]&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">                break</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                chunk </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> json.loads(line[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">6</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                content </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> chunk.get(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;choices&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, [{}])[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].get(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;delta&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, {}).get(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;content&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">                if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> content:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">                    print</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(content, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">end</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">flush</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">True</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            except</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> json.JSONDecodeError:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">                continue</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#handle-streaming-in-python\",\"isPage\":false,\"text\":\"\\nimport requests\\nimport json\\n \\nurl = &quot;https://devnet.aimo.network/api/v1/chat/completions&quot;\\nheaders = {\\n    &quot;Authorization&quot;: f&quot;Bearer {os.getenv(&#x27;AIMO_API_KEY&#x27;)}&quot;,\\n    &quot;Content-Type&quot;: &quot;application/json&quot;\\n}\\n \\ndata = {\\n    &quot;model&quot;: &quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&quot;,\\n    &quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Tell me a story&quot;}],\\n    &quot;stream&quot;: True\\n}\\n \\nresponse = requests.post(url, headers=headers, json=data, stream=True)\\n \\nfor line in response.iter_lines():\\n    if line:\\n        line = line.decode(&#x27;utf-8&#x27;)\\n        if line.startswith(&#x27;data: &#x27;):\\n            if line == &#x27;data: [DONE]&#x27;:\\n                break\\n            try:\\n                chunk = json.loads(line[6:])\\n                content = chunk.get(&#x27;choices&#x27;, [{}])[0].get(&#x27;delta&#x27;, {}).get(&#x27;content&#x27;)\\n                if content:\\n                    print(content, end=&#x27;&#x27;, flush=True)\\n            except json.JSONDecodeError:\\n                continue\\n\",\"title\":\"Handle Streaming in Python\",\"titles\":[\"Making Requests\",\"Streaming Responses\"]},{\"href\":\"/user-guide/making-requests#handle-streaming-in-javascript\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> response</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> fetch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://devnet.aimo.network/api/v1/chat/completions&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;POST&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  headers: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &#x27;Authorization&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">`Bearer ${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">process</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">env</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">AIMO_API_KEY</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &#x27;Content-Type&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;application/json&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  body: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">JSON</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">stringify</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    model: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    messages: [{ role: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;user&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, content: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Tell me a story&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    stream: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> reader</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.body.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getReader</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> decoder</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> TextDecoder</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">while</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">done</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">value</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> reader.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">read</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (done) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">break</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> chunk</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> decoder.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">decode</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(value);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> lines</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> chunk.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">split</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">\\\\n</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> line</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> of</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> lines) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (line.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">startsWith</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;data: &#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (line </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">===</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;data: [DONE]&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> JSON</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parse</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(line.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">slice</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">6</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> content</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> data.choices?.[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]?.delta?.content;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (content) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          process.stdout.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">write</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(content);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">catch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (e) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">        // Skip invalid JSON</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#handle-streaming-in-javascript\",\"isPage\":false,\"text\":\"\\nconst response = await fetch(&#x27;https://devnet.aimo.network/api/v1/chat/completions&#x27;, {\\n  method: &#x27;POST&#x27;,\\n  headers: {\\n    &#x27;Authorization&#x27;: `Bearer ${process.env.AIMO_API_KEY}`,\\n    &#x27;Content-Type&#x27;: &#x27;application/json&#x27;\\n  },\\n  body: JSON.stringify({\\n    model: &#x27;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&#x27;,\\n    messages: [{ role: &#x27;user&#x27;, content: &#x27;Tell me a story&#x27; }],\\n    stream: true\\n  })\\n});\\n \\nconst reader = response.body.getReader();\\nconst decoder = new TextDecoder();\\n \\nwhile (true) {\\n  const { done, value } = await reader.read();\\n  if (done) break;\\n  \\n  const chunk = decoder.decode(value);\\n  const lines = chunk.split(&#x27;\\\\n&#x27;);\\n  \\n  for (const line of lines) {\\n    if (line.startsWith(&#x27;data: &#x27;)) {\\n      if (line === &#x27;data: [DONE]&#x27;) return;\\n      try {\\n        const data = JSON.parse(line.slice(6));\\n        const content = data.choices?.[0]?.delta?.content;\\n        if (content) {\\n          process.stdout.write(content);\\n        }\\n      } catch (e) {\\n        // Skip invalid JSON\\n      }\\n    }\\n  }\\n}\\n\",\"title\":\"Handle Streaming in JavaScript\",\"titles\":[\"Making Requests\",\"Streaming Responses\"]},{\"href\":\"/user-guide/making-requests#error-handling\",\"html\":\"\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#error-handling\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Error Handling\",\"titles\":[\"Making Requests\"]},{\"href\":\"/user-guide/making-requests#error-response-format\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">  &quot;error&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;message&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Insufficient balance for estimated cost: 0.001 tokens&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;type&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;insufficient_balance&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">    &quot;code&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">402</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#error-response-format\",\"isPage\":false,\"text\":\"\\n{\\n  &quot;error&quot;: {\\n    &quot;message&quot;: &quot;Insufficient balance for estimated cost: 0.001 tokens&quot;,\\n    &quot;type&quot;: &quot;insufficient_balance&quot;,\\n    &quot;code&quot;: 402\\n  }\\n}\\n\",\"title\":\"Error Response Format\",\"titles\":[\"Making Requests\",\"Error Handling\"]},{\"href\":\"/user-guide/making-requests#common-error-codes\",\"html\":\"\\n<table><thead><tr><th>Code</th><th>Description</th><th>Action</th></tr></thead><tbody><tr><td><code>400</code></td><td>Bad Request</td><td>Check request format</td></tr><tr><td><code>401</code></td><td>Unauthorized</td><td>Verify API key</td></tr><tr><td><code>402</code></td><td>Payment Required</td><td>Fund escrow account</td></tr><tr><td><code>404</code></td><td>Not Found</td><td>Check provider/model format</td></tr><tr><td><code>422</code></td><td>Unprocessable Entity</td><td>Check model parameters</td></tr><tr><td><code>424</code></td><td>Failed Dependency</td><td>Set up escrow account</td></tr><tr><td><code>429</code></td><td>Too Many Requests</td><td>Implement backoff</td></tr><tr><td><code>500</code></td><td>Internal Server Error</td><td>Retry request</td></tr></tbody></table>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#common-error-codes\",\"isPage\":false,\"text\":\"\\nCodeDescriptionAction400Bad RequestCheck request format401UnauthorizedVerify API key402Payment RequiredFund escrow account404Not FoundCheck provider/model format422Unprocessable EntityCheck model parameters424Failed DependencySet up escrow account429Too Many RequestsImplement backoff500Internal Server ErrorRetry request\\n\",\"title\":\"Common Error Codes\",\"titles\":[\"Making Requests\",\"Error Handling\"]},{\"href\":\"/user-guide/making-requests#implementing-retry-logic\",\"html\":\"\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#implementing-retry-logic\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Implementing Retry Logic\",\"titles\":[\"Making Requests\",\"Error Handling\"]},{\"href\":\"/user-guide/making-requests#python-example-1\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> time</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> random</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> os</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">def</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> make_request_with_retry</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(messages, max_retries</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">3</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    url </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;https://devnet.aimo.network/api/v1/chat/completions&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    headers </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &quot;Authorization&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Bearer </span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">os.getenv(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;AIMO_API_KEY&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">        &quot;Content-Type&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;application/json&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> attempt </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">in</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> range</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(max_retries):</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            response </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requests.post(url, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">headers</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">headers, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">json</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &quot;model&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">                &quot;messages&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: messages</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.status_code </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 200</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">                return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.json()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            elif</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.status_code </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 429</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Rate limit</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                wait_time </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">2</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> **</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> attempt) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">+</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> random.uniform(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                time.sleep(wait_time)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">                continue</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            elif</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response.status_code </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 500</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:  </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Server error</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">                if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> attempt </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&lt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> max_retries </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">-</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                    time.sleep(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">                    continue</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            else</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">                raise</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Exception</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">f</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Request failed: </span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">response.json()</span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        except</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Exception</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> e:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> attempt </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">==</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> max_retries </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">-</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">                raise</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> e</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            time.sleep(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    raise</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Exception</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Max retries exceeded&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#python-example-1\",\"isPage\":false,\"text\":\"\\nimport time\\nimport random\\nimport requests\\nimport os\\n \\ndef make_request_with_retry(messages, max_retries=3):\\n    url = &quot;https://devnet.aimo.network/api/v1/chat/completions&quot;\\n    headers = {\\n        &quot;Authorization&quot;: f&quot;Bearer {os.getenv(&#x27;AIMO_API_KEY&#x27;)}&quot;,\\n        &quot;Content-Type&quot;: &quot;application/json&quot;\\n    }\\n    \\n    for attempt in range(max_retries):\\n        try:\\n            response = requests.post(url, headers=headers, json={\\n                &quot;model&quot;: &quot;9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM:gpt-3.5-turbo&quot;,\\n                &quot;messages&quot;: messages\\n            })\\n            \\n            if response.status_code == 200:\\n                return response.json()\\n            elif response.status_code == 429:  # Rate limit\\n                wait_time = (2 ** attempt) + random.uniform(0, 1)\\n                time.sleep(wait_time)\\n                continue\\n            elif response.status_code &gt;= 500:  # Server error\\n                if attempt &lt; max_retries - 1:\\n                    time.sleep(1)\\n                    continue\\n            else:\\n                raise Exception(f&quot;Request failed: {response.json()}&quot;)\\n        except Exception as e:\\n            if attempt == max_retries - 1:\\n                raise e\\n            time.sleep(1)\\n    \\n    raise Exception(&quot;Max retries exceeded&quot;)\\n\",\"title\":\"Python Example\",\"titles\":[\"Making Requests\",\"Error Handling\",\"Implementing Retry Logic\"]},{\"href\":\"/user-guide/making-requests#javascript-example-1\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">async</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> makeRequestWithRetry</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">messages</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">maxRetries</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 3</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  for</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">let</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> attempt </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">; attempt </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&lt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> maxRetries; attempt</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">++</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> response</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.chat.completions.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">create</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        model: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;gpt-4&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        messages: messages</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> response;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">catch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (error) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (error.status </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">===</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 429</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Rate limit</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> waitTime</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">2</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> **</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> attempt) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 1000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> +</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> Math.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">random</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 1000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        await</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Promise</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">resolve</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setTimeout</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(resolve, waitTime));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        continue</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (error.status </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 500</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Server error</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (attempt </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&lt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> maxRetries </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">-</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">          await</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Promise</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">resolve</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setTimeout</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(resolve, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">          continue</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      throw</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> error;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  throw</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Max retries exceeded&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#javascript-example-1\",\"isPage\":false,\"text\":\"\\nasync function makeRequestWithRetry(messages, maxRetries = 3) {\\n  for (let attempt = 0; attempt &lt; maxRetries; attempt++) {\\n    try {\\n      const response = await client.chat.completions.create({\\n        model: &#x27;gpt-4&#x27;,\\n        messages: messages\\n      });\\n      return response;\\n    } catch (error) {\\n      if (error.status === 429) { // Rate limit\\n        const waitTime = (2 ** attempt) * 1000 + Math.random() * 1000;\\n        await new Promise(resolve =&gt; setTimeout(resolve, waitTime));\\n        continue;\\n      } else if (error.status &gt;= 500) { // Server error\\n        if (attempt &lt; maxRetries - 1) {\\n          await new Promise(resolve =&gt; setTimeout(resolve, 1000));\\n          continue;\\n        }\\n      }\\n      throw error;\\n    }\\n  }\\n  throw new Error(&#x27;Max retries exceeded&#x27;);\\n}\\n\",\"title\":\"JavaScript Example\",\"titles\":[\"Making Requests\",\"Error Handling\",\"Implementing Retry Logic\"]},{\"href\":\"/user-guide/making-requests#best-practices\",\"html\":\"\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#best-practices\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Best Practices\",\"titles\":[\"Making Requests\"]},{\"href\":\"/user-guide/making-requests#request-optimization\",\"html\":\"\\n<ol>\\n<li><strong>Batch requests</strong> when possible to reduce latency</li>\\n<li><strong>Use appropriate timeouts</strong> for your application</li>\\n<li><strong>Implement caching</strong> for repeated requests</li>\\n<li><strong>Monitor token usage</strong> to control costs</li>\\n</ol>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#request-optimization\",\"isPage\":false,\"text\":\"\\n\\nBatch requests when possible to reduce latency\\nUse appropriate timeouts for your application\\nImplement caching for repeated requests\\nMonitor token usage to control costs\\n\\n\",\"title\":\"Request Optimization\",\"titles\":[\"Making Requests\",\"Best Practices\"]},{\"href\":\"/user-guide/making-requests#performance-tips\",\"html\":\"\\n<ol>\\n<li><strong>Choose the right model</strong> for your use case</li>\\n<li><strong>Optimize prompt length</strong> to reduce costs</li>\\n<li><strong>Use streaming</strong> for better user experience</li>\\n<li><strong>Implement proper error handling</strong> and retries</li>\\n</ol>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#performance-tips\",\"isPage\":false,\"text\":\"\\n\\nChoose the right model for your use case\\nOptimize prompt length to reduce costs\\nUse streaming for better user experience\\nImplement proper error handling and retries\\n\\n\",\"title\":\"Performance Tips\",\"titles\":[\"Making Requests\",\"Best Practices\"]},{\"href\":\"/user-guide/making-requests#security-considerations\",\"html\":\"\\n<ol>\\n<li><strong>Never expose API keys</strong> in client-side code</li>\\n<li><strong>Use environment variables</strong> for API key storage</li>\\n<li><strong>Implement request validation</strong> on your backend</li>\\n<li><strong>Monitor usage</strong> for unusual activity</li>\\n</ol>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#security-considerations\",\"isPage\":false,\"text\":\"\\n\\nNever expose API keys in client-side code\\nUse environment variables for API key storage\\nImplement request validation on your backend\\nMonitor usage for unusual activity\\n\\n\",\"title\":\"Security Considerations\",\"titles\":[\"Making Requests\",\"Best Practices\"]},{\"href\":\"/user-guide/making-requests#next-steps\",\"html\":\"\\n<p>Now that you know how to make requests:</p>\\n<ol>\\n<li><strong><a href=\\\"/user-guide/authentication\\\">Set up authentication</a></strong> with API keys and Solana wallets</li>\\n<li><strong><a href=\\\"/user-guide/model-discovery\\\">Discover available models</a></strong> and their capabilities</li>\\n<li><strong><a href=\\\"/user-guide/billing\\\">Manage billing</a></strong> to fund your escrow account and track costs</li>\\n</ol>\\n\",\"id\":\"docs/pages/user-guide/making-requests.mdx#next-steps\",\"isPage\":false,\"text\":\"\\nNow that you know how to make requests:\\n\\nSet up authentication with API keys and Solana wallets\\nDiscover available models and their capabilities\\nManage billing to fund your escrow account and track costs\\n\\n\",\"title\":\"Next Steps\",\"titles\":[\"Making Requests\"]},{\"href\":\"/user-guide/making-requests#additional-resources\",\"html\":\"\\n<ul>\\n<li><strong>Model Format</strong>: Always use <code>provider_pubkey:model_name</code></li>\\n<li><strong>Base URL</strong>: <code>https://devnet.aimo.network/api/v1</code></li>\\n<li><strong>OpenAI Compatibility</strong>: Standard OpenAI parameters are supported</li>\\n</ul>\\n<p>Need help with a specific request pattern? Contact your AiMo Network node operator or the community.</p>\",\"id\":\"docs/pages/user-guide/making-requests.mdx#additional-resources\",\"isPage\":false,\"text\":\"\\n\\nModel Format: Always use provider_pubkey:model_name\\nBase URL: https://devnet.aimo.network/api/v1\\nOpenAI Compatibility: Standard OpenAI parameters are supported\\n\\nNeed help with a specific request pattern? Contact your AiMo Network node operator or the community.\",\"title\":\"Additional Resources\",\"titles\":[\"Making Requests\"]}]}}"
